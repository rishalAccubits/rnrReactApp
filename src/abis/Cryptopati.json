{
  "contractName": "Cryptopati",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IAccuCoin",
          "name": "_accuCoin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_platform",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "questionId",
          "type": "string"
        }
      ],
      "name": "QuestionAdd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "questionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commitAmount",
          "type": "uint256"
        }
      ],
      "name": "UnlockQuestion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "questionId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "WinQuestion",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accuCoin",
      "outputs": [
        {
          "internalType": "contract IAccuCoin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "initialAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isInitialClaimable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isReplenishable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "platform",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "replenishAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "replenishDuration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalCommitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalAmountCollected",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userLastClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "userToQuestionId",
      "outputs": [
        {
          "internalType": "bool",
          "name": "answered",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "unlockTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "commitAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collectedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IAccuCoin",
          "name": "_accuCoin",
          "type": "address"
        }
      ],
      "name": "setAccuCoin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platform",
          "type": "address"
        }
      ],
      "name": "setPlatform",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleIsInitialClaimable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleIsReplenishable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_initialAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_replenishAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_replenishDuration",
          "type": "uint256"
        }
      ],
      "name": "configureClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "questionId",
          "type": "string"
        }
      ],
      "name": "questionExist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "questionId",
          "type": "string"
        }
      ],
      "name": "getQuestion",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "multiplier",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exist",
              "type": "bool"
            }
          ],
          "internalType": "struct Cryptopati.Question",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "questionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "addQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "questionId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "commitAmount",
          "type": "uint256"
        }
      ],
      "name": "unlockQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "questionId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_addressUser",
          "type": "address"
        }
      ],
      "name": "winQuestion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IAccuCoin\",\"name\":\"_accuCoin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_platform\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"questionId\",\"type\":\"string\"}],\"name\":\"QuestionAdd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"questionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitAmount\",\"type\":\"uint256\"}],\"name\":\"UnlockQuestion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"questionId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"WinQuestion\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accuCoin\",\"outputs\":[{\"internalType\":\"contract IAccuCoin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"questionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"addQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_replenishAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_replenishDuration\",\"type\":\"uint256\"}],\"name\":\"configureClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"questionId\",\"type\":\"string\"}],\"name\":\"getQuestion\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"}],\"internalType\":\"struct Cryptopati.Question\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialClaimable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReplenishable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platform\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"questionId\",\"type\":\"string\"}],\"name\":\"questionExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"replenishAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"replenishDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAccuCoin\",\"name\":\"_accuCoin\",\"type\":\"address\"}],\"name\":\"setAccuCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platform\",\"type\":\"address\"}],\"name\":\"setPlatform\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleIsInitialClaimable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleIsReplenishable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"questionId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"commitAmount\",\"type\":\"uint256\"}],\"name\":\"unlockQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCommitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAmountCollected\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLastClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userToQuestionId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"answered\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collectedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"questionId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_addressUser\",\"type\":\"address\"}],\"name\":\"winQuestion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addQuestion(string,uint256)\":{\"params\":{\"questionId\":\"ID of the question\"}},\"configureClaim(uint256,uint256,uint256)\":{\"params\":{\"_initialAmount\":\"Initial amount that can be claimed by an address\",\"_replenishAmount\":\"Amount of tokens that can be claimed when replenished\",\"_replenishDuration\":\"Duration in which token will replenish\"}},\"getQuestion(string)\":{\"params\":{\"questionId\":\"ID of the question\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"questionExist(string)\":{\"params\":{\"questionId\":\"ID of the question\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAccuCoin(address)\":{\"params\":{\"_accuCoin\":\"Address of accu coin\"}},\"setPlatform(address)\":{\"params\":{\"_platform\":\"Address of the platform wallet\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockQuestion(string,uint256)\":{\"params\":{\"commitAmount\":\"Amount user invests to unlock the question\",\"questionId\":\"ID of the question\"}},\"winQuestion(string,address)\":{\"params\":{\"_addressUser\":\"address of the user to sent reward\",\"questionId\":\"ID of the question\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addQuestion(string,uint256)\":{\"notice\":\"This method is used to get question details\"},\"claimTokens()\":{\"notice\":\"This method is used to claim tokens initially or when replenished\"},\"configureClaim(uint256,uint256,uint256)\":{\"notice\":\"This method is used to set token claim settings\"},\"getQuestion(string)\":{\"notice\":\"This method is used to get question details\"},\"pause()\":{\"notice\":\"This method is used pause user functionalities of the contract\"},\"questionExist(string)\":{\"notice\":\"This method is used to check if a question exist\"},\"setAccuCoin(address)\":{\"notice\":\"This method is used to address of accu coin\"},\"setPlatform(address)\":{\"notice\":\"This method is used to set platform wallet address\"},\"toggleIsInitialClaimable()\":{\"notice\":\"This method is used to toggle initial token claim\"},\"toggleIsReplenishable()\":{\"notice\":\"This method is used to toggle token replenish claim\"},\"unlockQuestion(string,uint256)\":{\"notice\":\"This method is used to unlock the question\"},\"unpause()\":{\"notice\":\"This method is used unpause user functionalities of the contract\"},\"winQuestion(string,address)\":{\"notice\":\"This method is used to transfer reward if answer is correct\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Cryptopati.sol\":\"Cryptopati\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Cryptopati.sol\":{\"keccak256\":\"0x270de1b2205d514d6832ff89c586067bb4cb48b378ce82cf4e8dd8a19a951a28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e968793ae60ac4fad5f197a546e96881355d4de126c88ebd28a874a1edb2f324\",\"dweb:/ipfs/QmXm4xYfgAgqmixdU8GHDxGtFx6Vdu6tirX7wYhdb96Pqx\"]},\"project:/contracts/interfaces/IAccuCoin.sol\":{\"keccak256\":\"0x89854a01849a5c1af2f24ef21df22f25214225f7d5e23b7e8d719203aa2ebc53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09fa5e6fdaae89ad88ee6629728e04c683a89fa9a3a6febca7b65451dc0b54e5\",\"dweb:/ipfs/QmRyNdtqQUxxg6iNweExV1GLLgNN8n7o8GF97PXX7UG4BR\"]}},\"version\":1}",
  "bytecode": "0x608060405268056bc75e2d6310000060035560048054600160ff199182168117909255678ac7230489e800006005556138406006556007805490911690911790553480156200004d57600080fd5b506040516200197738038062001977833981016040819052620000709162000145565b6200009662000087640100000000620000d8810204565b640100000000620000dc810204565b6000805460a060020a60ff021916905560018054600160a060020a03938416600160a060020a0319918216179091556002805492909316911617905562000184565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600160a060020a03811681146200014257600080fd5b50565b600080604083850312156200015957600080fd5b825162000166816200012c565b602084015190925062000179816200012c565b809150509250929050565b6117e380620001946000396000f3fe608060405234801561001057600080fd5b50600436106101c6576000357c0100000000000000000000000000000000000000000000000000000000900480636945c5ea11610116578063bed9bb02116100b4578063ef4855961161008e578063ef485596146103bc578063f2fde38b146103cf578063fc1ed437146103e2578063fe99d1e4146103eb57600080fd5b8063bed9bb0214610371578063ccb1c0a114610379578063cecf329c146103a957600080fd5b80637ff99dbe116100f05780637ff99dbe146103425780638456cb591461034b5780638da5cb5b14610353578063a0bf70c01461036457600080fd5b80636945c5ea146103145780636ccbe81b14610327578063715018a61461033a57600080fd5b80633f4ba83a116101835780634bde38c81161015d5780634bde38c8146102c3578063503a3ed8146102d657806355e9deca146102de5780635c975abb146102f157600080fd5b80633f4ba83a14610293578063425a51771461029b57806348c54b9d146102bb57600080fd5b806312078167146101cb578063129cd33e146101fb5780631959a002146102105780632ba387541461024c57806332217e94146102635780633962612714610286575b600080fd5b6001546101de90600160a060020a031681565b604051600160a060020a0390911681526020015b60405180910390f35b61020e610209366004611432565b610462565b005b61023761021e366004611493565b600a602052600090815260409020805460019091015482565b604080519283526020830191909152016101f2565b61025560065481565b6040519081526020016101f2565b6102766102713660046114b7565b61059b565b60405190151581526020016101f2565b6007546102769060ff1681565b61020e6105ce565b6102556102a9366004611493565b600c6020526000908152604090205481565b6102556105e0565b6002546101de90600160a060020a031681565b61020e61085f565b61020e6102ec366004611432565b61087b565b60005474010000000000000000000000000000000000000000900460ff16610276565b61020e610322366004611493565b610b1e565b61020e6103353660046114f9565b610b55565b61020e610b6b565b61025560055481565b61020e610b7d565b600054600160a060020a03166101de565b6004546102769060ff1681565b61020e610b8d565b61038c6103873660046114b7565b610ba9565b6040805182518152602092830151151592810192909252016101f2565b61020e6103b7366004611525565b610c2f565b61020e6103ca366004611493565b6110bf565b61020e6103dd366004611493565b6110f6565b61025560035481565b6104406103f93660046115ab565b600b6020908152600092835260409092208151808301840180519281529084019290930191909120915280546001820154600283015460039093015460ff90921692909184565b60408051941515855260208501939093529183015260608201526080016101f2565b61046a611189565b6009838360405161047c92919061166f565b9081526040519081900360200190206001015460ff161561050c5760405160e560020a62461bcd028152602060048201526024808201527f43727970746f706174693a207175657374696f6e496420616c7265616479206160448201527f646465640000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b604080518082018252828152600160208201529051600990610531908690869061166f565b908152604051602091819003820181208351815592909101516001909201805460ff1916921515929092179091557f9bdf0f47340b5b4ece38eb89dee27899b2f0ca92def38e08dc80f7b76adf05c79061058e90859085906116a8565b60405180910390a1505050565b6000600983836040516105af92919061166f565b9081526040519081900360200190206001015460ff1690505b92915050565b6105d6611189565b6105de6111e6565b565b60006105ea61124c565b336000908152600c6020526040902054156107175760075460ff1661067a5760405160e560020a62461bcd02815260206004820152602560248201527f43727970746f706174693a20746f6b656e207265706c656e697368206973207060448201527f61757365640000000000000000000000000000000000000000000000000000006064820152608401610503565b600654336000908152600c602052604090205461069790426116f3565b101561070e5760405160e560020a62461bcd02815260206004820152603860248201527f43727970746f706174693a2077616974207265706c656e69736820647572617460448201527f696f6e20746f20636c61696d206d6f726520746f6b656e7300000000000000006064820152608401610503565b50600554610797565b60045460ff166107925760405160e560020a62461bcd02815260206004820152602360248201527f43727970746f706174693a20696e697469616c20636c61696d2069732070617560448201527f73656400000000000000000000000000000000000000000000000000000000006064820152608401610503565b506003545b336000818152600c60205260409081902042905560015490517f40c10f19000000000000000000000000000000000000000000000000000000008152600481019290925260248201839052600160a060020a0316906340c10f1990604401600060405180830381600087803b15801561080f57600080fd5b505af1158015610823573d6000803e3d6000fd5b50506040518381523392507f4d7f917f6b905f28ba5297e6c224a6cfec20ac6a3698a55b412d30b95ad25d2f915060200160405180910390a290565b610867611189565b6007805460ff19811660ff90911615179055565b61088361124c565b828261088f828261059b565b6108ae5760405160e560020a62461bcd02815260040161050390611706565b336000908152600b60205260409081902090516108ce908790879061166f565b9081526020016040518091039020600101546000146109585760405160e560020a62461bcd02815260206004820152602560248201527f43727970746f706174693a205175657374696f6e20616c726561647920756e6c60448201527f6f636b65640000000000000000000000000000000000000000000000000000006064820152608401610503565b826000036109ab5760405160e560020a62461bcd02815260206004820152601e60248201527f43727970746f706174693a20436f6d6d697420416d6f756e74205a65726f00006044820152606401610503565b336000908152600b60205260409081902090518491906109ce908890889061166f565b908152604080516020928190038301812060020193909355336000908152600b90925290204291610a02908890889061166f565b908152604080516020928190038301902060010192909255336000908152600a9091529081208054859290610a3890849061173d565b90915550506001546040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101859052600160a060020a03909116906323b872dd906064016020604051808303816000875af1158015610aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad19190611750565b5033600160a060020a03167f67da36e16a632f9aaad852491a734952a41b7884fa841f566862c81003adeb13868686604051610b0f93929190611772565b60405180910390a25050505050565b610b26611189565b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b610b5d611189565b600392909255600555600655565b610b73611189565b6105de60006112ba565b610b85611189565b6105de611317565b610b95611189565b6004805460ff19811660ff90911615179055565b60408051808201909152600080825260208201528282610bc9828261059b565b610be85760405160e560020a62461bcd02815260040161050390611706565b60098585604051610bfa92919061166f565b9081526040805191829003602090810183208383019092528154835260019091015460ff161515908201529250505092915050565b8282610c3b828261059b565b610c5a5760405160e560020a62461bcd02815260040161050390611706565b600254600160a060020a03163314610cb75760405160e560020a62461bcd02815260206004820152601960248201527f43727970746f706174693a206f6e6c7920706c6174666f726d000000000000006044820152606401610503565b600160a060020a0383166000908152600b6020526040908190209051610ce0908790879061166f565b908152602001604051809103902060010154600003610d6a5760405160e560020a62461bcd02815260206004820152602160248201527f43727970746f706174693a205175657374696f6e206e6f7420756e6c6f636b6560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152608401610503565b600160a060020a0383166000908152600b6020526040908190209051610d93908790879061166f565b9081526040519081900360200190205460ff1615610e1c5760405160e560020a62461bcd02815260206004820152602560248201527f43727970746f706174693a205175657374696f6e20616c726561647920616e7360448201527f77657265640000000000000000000000000000000000000000000000000000006064820152608401610503565b600160a060020a0383166000908152600b602052604090819020905160019190610e49908890889061166f565b9081526040805160209281900383018120805460ff191694151594909417909355600160a060020a0386166000908152600b90925281209091610e8f908890889061166f565b9081526020016040518091039020600201549050600060098787604051610eb792919061166f565b90815260405190819003602001902054610ed19083611796565b9050610edd82826116f3565b600855600160a060020a0385166000908152600b6020526040908190209051829190610f0c908a908a9061166f565b90815260200160405180910390206003018190555080600a600087600160a060020a0316600160a060020a031681526020019081526020016000206001016000828254610f59919061173d565b90915550506001546008546040517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03888116600483015260248201929092529116906340c10f1990604401600060405180830381600087803b158015610fc857600080fd5b505af1158015610fdc573d6000803e3d6000fd5b50506001546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03898116600483015260248201879052909116925063a9059cbb91506044016020604051808303816000875af115801561104c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110709190611750565b5084600160a060020a03167f121ac003552f99fa84985528b2fcf8156f08f6f0aa48e9c5245098682cee2ec88888846040516110ae93929190611772565b60405180910390a250505050505050565b6110c7611189565b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6110fe611189565b600160a060020a03811661117d5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610503565b611186816112ba565b50565b600054600160a060020a031633146105de5760405160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610503565b6111ee61137c565b6000805474ff0000000000000000000000000000000000000000191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051600160a060020a03909116815260200160405180910390a1565b60005474010000000000000000000000000000000000000000900460ff16156105de5760405160e560020a62461bcd02815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610503565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61131f61124c565b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861122f3390565b60005474010000000000000000000000000000000000000000900460ff166105de5760405160e560020a62461bcd02815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610503565b60008083601f8401126113fb57600080fd5b50813567ffffffffffffffff81111561141357600080fd5b60208301915083602082850101111561142b57600080fd5b9250929050565b60008060006040848603121561144757600080fd5b833567ffffffffffffffff81111561145e57600080fd5b61146a868287016113e9565b909790965060209590950135949350505050565b600160a060020a038116811461118657600080fd5b6000602082840312156114a557600080fd5b81356114b08161147e565b9392505050565b600080602083850312156114ca57600080fd5b823567ffffffffffffffff8111156114e157600080fd5b6114ed858286016113e9565b90969095509350505050565b60008060006060848603121561150e57600080fd5b505081359360208301359350604090920135919050565b60008060006040848603121561153a57600080fd5b833567ffffffffffffffff81111561155157600080fd5b61155d868287016113e9565b90945092505060208401356115718161147e565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156115be57600080fd5b82356115c98161147e565b9150602083013567ffffffffffffffff808211156115e657600080fd5b818501915085601f8301126115fa57600080fd5b81358181111561160c5761160c61157c565b604051601f8201601f19908116603f011681019083821181831017156116345761163461157c565b8160405282815288602084870101111561164d57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006116bc60208301848661167f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156105c8576105c86116c4565b6020808252601c908201527f43727970746f706174693a20696e76616c6964207175657374696f6e00000000604082015260600190565b808201808211156105c8576105c86116c4565b60006020828403121561176257600080fd5b815180151581146114b057600080fd5b60408152600061178660408301858761167f565b9050826020830152949350505050565b80820281158282048414176105c8576105c86116c456fea26469706673582212201a63ea3fb043cbf64354fff11980d4ed0f0cb135bbd690b9507b280c3b6749f864736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c6576000357c0100000000000000000000000000000000000000000000000000000000900480636945c5ea11610116578063bed9bb02116100b4578063ef4855961161008e578063ef485596146103bc578063f2fde38b146103cf578063fc1ed437146103e2578063fe99d1e4146103eb57600080fd5b8063bed9bb0214610371578063ccb1c0a114610379578063cecf329c146103a957600080fd5b80637ff99dbe116100f05780637ff99dbe146103425780638456cb591461034b5780638da5cb5b14610353578063a0bf70c01461036457600080fd5b80636945c5ea146103145780636ccbe81b14610327578063715018a61461033a57600080fd5b80633f4ba83a116101835780634bde38c81161015d5780634bde38c8146102c3578063503a3ed8146102d657806355e9deca146102de5780635c975abb146102f157600080fd5b80633f4ba83a14610293578063425a51771461029b57806348c54b9d146102bb57600080fd5b806312078167146101cb578063129cd33e146101fb5780631959a002146102105780632ba387541461024c57806332217e94146102635780633962612714610286575b600080fd5b6001546101de90600160a060020a031681565b604051600160a060020a0390911681526020015b60405180910390f35b61020e610209366004611432565b610462565b005b61023761021e366004611493565b600a602052600090815260409020805460019091015482565b604080519283526020830191909152016101f2565b61025560065481565b6040519081526020016101f2565b6102766102713660046114b7565b61059b565b60405190151581526020016101f2565b6007546102769060ff1681565b61020e6105ce565b6102556102a9366004611493565b600c6020526000908152604090205481565b6102556105e0565b6002546101de90600160a060020a031681565b61020e61085f565b61020e6102ec366004611432565b61087b565b60005474010000000000000000000000000000000000000000900460ff16610276565b61020e610322366004611493565b610b1e565b61020e6103353660046114f9565b610b55565b61020e610b6b565b61025560055481565b61020e610b7d565b600054600160a060020a03166101de565b6004546102769060ff1681565b61020e610b8d565b61038c6103873660046114b7565b610ba9565b6040805182518152602092830151151592810192909252016101f2565b61020e6103b7366004611525565b610c2f565b61020e6103ca366004611493565b6110bf565b61020e6103dd366004611493565b6110f6565b61025560035481565b6104406103f93660046115ab565b600b6020908152600092835260409092208151808301840180519281529084019290930191909120915280546001820154600283015460039093015460ff90921692909184565b60408051941515855260208501939093529183015260608201526080016101f2565b61046a611189565b6009838360405161047c92919061166f565b9081526040519081900360200190206001015460ff161561050c5760405160e560020a62461bcd028152602060048201526024808201527f43727970746f706174693a207175657374696f6e496420616c7265616479206160448201527f646465640000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b604080518082018252828152600160208201529051600990610531908690869061166f565b908152604051602091819003820181208351815592909101516001909201805460ff1916921515929092179091557f9bdf0f47340b5b4ece38eb89dee27899b2f0ca92def38e08dc80f7b76adf05c79061058e90859085906116a8565b60405180910390a1505050565b6000600983836040516105af92919061166f565b9081526040519081900360200190206001015460ff1690505b92915050565b6105d6611189565b6105de6111e6565b565b60006105ea61124c565b336000908152600c6020526040902054156107175760075460ff1661067a5760405160e560020a62461bcd02815260206004820152602560248201527f43727970746f706174693a20746f6b656e207265706c656e697368206973207060448201527f61757365640000000000000000000000000000000000000000000000000000006064820152608401610503565b600654336000908152600c602052604090205461069790426116f3565b101561070e5760405160e560020a62461bcd02815260206004820152603860248201527f43727970746f706174693a2077616974207265706c656e69736820647572617460448201527f696f6e20746f20636c61696d206d6f726520746f6b656e7300000000000000006064820152608401610503565b50600554610797565b60045460ff166107925760405160e560020a62461bcd02815260206004820152602360248201527f43727970746f706174693a20696e697469616c20636c61696d2069732070617560448201527f73656400000000000000000000000000000000000000000000000000000000006064820152608401610503565b506003545b336000818152600c60205260409081902042905560015490517f40c10f19000000000000000000000000000000000000000000000000000000008152600481019290925260248201839052600160a060020a0316906340c10f1990604401600060405180830381600087803b15801561080f57600080fd5b505af1158015610823573d6000803e3d6000fd5b50506040518381523392507f4d7f917f6b905f28ba5297e6c224a6cfec20ac6a3698a55b412d30b95ad25d2f915060200160405180910390a290565b610867611189565b6007805460ff19811660ff90911615179055565b61088361124c565b828261088f828261059b565b6108ae5760405160e560020a62461bcd02815260040161050390611706565b336000908152600b60205260409081902090516108ce908790879061166f565b9081526020016040518091039020600101546000146109585760405160e560020a62461bcd02815260206004820152602560248201527f43727970746f706174693a205175657374696f6e20616c726561647920756e6c60448201527f6f636b65640000000000000000000000000000000000000000000000000000006064820152608401610503565b826000036109ab5760405160e560020a62461bcd02815260206004820152601e60248201527f43727970746f706174693a20436f6d6d697420416d6f756e74205a65726f00006044820152606401610503565b336000908152600b60205260409081902090518491906109ce908890889061166f565b908152604080516020928190038301812060020193909355336000908152600b90925290204291610a02908890889061166f565b908152604080516020928190038301902060010192909255336000908152600a9091529081208054859290610a3890849061173d565b90915550506001546040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101859052600160a060020a03909116906323b872dd906064016020604051808303816000875af1158015610aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad19190611750565b5033600160a060020a03167f67da36e16a632f9aaad852491a734952a41b7884fa841f566862c81003adeb13868686604051610b0f93929190611772565b60405180910390a25050505050565b610b26611189565b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b610b5d611189565b600392909255600555600655565b610b73611189565b6105de60006112ba565b610b85611189565b6105de611317565b610b95611189565b6004805460ff19811660ff90911615179055565b60408051808201909152600080825260208201528282610bc9828261059b565b610be85760405160e560020a62461bcd02815260040161050390611706565b60098585604051610bfa92919061166f565b9081526040805191829003602090810183208383019092528154835260019091015460ff161515908201529250505092915050565b8282610c3b828261059b565b610c5a5760405160e560020a62461bcd02815260040161050390611706565b600254600160a060020a03163314610cb75760405160e560020a62461bcd02815260206004820152601960248201527f43727970746f706174693a206f6e6c7920706c6174666f726d000000000000006044820152606401610503565b600160a060020a0383166000908152600b6020526040908190209051610ce0908790879061166f565b908152602001604051809103902060010154600003610d6a5760405160e560020a62461bcd02815260206004820152602160248201527f43727970746f706174693a205175657374696f6e206e6f7420756e6c6f636b6560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152608401610503565b600160a060020a0383166000908152600b6020526040908190209051610d93908790879061166f565b9081526040519081900360200190205460ff1615610e1c5760405160e560020a62461bcd02815260206004820152602560248201527f43727970746f706174693a205175657374696f6e20616c726561647920616e7360448201527f77657265640000000000000000000000000000000000000000000000000000006064820152608401610503565b600160a060020a0383166000908152600b602052604090819020905160019190610e49908890889061166f565b9081526040805160209281900383018120805460ff191694151594909417909355600160a060020a0386166000908152600b90925281209091610e8f908890889061166f565b9081526020016040518091039020600201549050600060098787604051610eb792919061166f565b90815260405190819003602001902054610ed19083611796565b9050610edd82826116f3565b600855600160a060020a0385166000908152600b6020526040908190209051829190610f0c908a908a9061166f565b90815260200160405180910390206003018190555080600a600087600160a060020a0316600160a060020a031681526020019081526020016000206001016000828254610f59919061173d565b90915550506001546008546040517f40c10f19000000000000000000000000000000000000000000000000000000008152600160a060020a03888116600483015260248201929092529116906340c10f1990604401600060405180830381600087803b158015610fc857600080fd5b505af1158015610fdc573d6000803e3d6000fd5b50506001546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a03898116600483015260248201879052909116925063a9059cbb91506044016020604051808303816000875af115801561104c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110709190611750565b5084600160a060020a03167f121ac003552f99fa84985528b2fcf8156f08f6f0aa48e9c5245098682cee2ec88888846040516110ae93929190611772565b60405180910390a250505050505050565b6110c7611189565b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6110fe611189565b600160a060020a03811661117d5760405160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610503565b611186816112ba565b50565b600054600160a060020a031633146105de5760405160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610503565b6111ee61137c565b6000805474ff0000000000000000000000000000000000000000191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051600160a060020a03909116815260200160405180910390a1565b60005474010000000000000000000000000000000000000000900460ff16156105de5760405160e560020a62461bcd02815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610503565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61131f61124c565b6000805474ff00000000000000000000000000000000000000001916740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861122f3390565b60005474010000000000000000000000000000000000000000900460ff166105de5760405160e560020a62461bcd02815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610503565b60008083601f8401126113fb57600080fd5b50813567ffffffffffffffff81111561141357600080fd5b60208301915083602082850101111561142b57600080fd5b9250929050565b60008060006040848603121561144757600080fd5b833567ffffffffffffffff81111561145e57600080fd5b61146a868287016113e9565b909790965060209590950135949350505050565b600160a060020a038116811461118657600080fd5b6000602082840312156114a557600080fd5b81356114b08161147e565b9392505050565b600080602083850312156114ca57600080fd5b823567ffffffffffffffff8111156114e157600080fd5b6114ed858286016113e9565b90969095509350505050565b60008060006060848603121561150e57600080fd5b505081359360208301359350604090920135919050565b60008060006040848603121561153a57600080fd5b833567ffffffffffffffff81111561155157600080fd5b61155d868287016113e9565b90945092505060208401356115718161147e565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156115be57600080fd5b82356115c98161147e565b9150602083013567ffffffffffffffff808211156115e657600080fd5b818501915085601f8301126115fa57600080fd5b81358181111561160c5761160c61157c565b604051601f8201601f19908116603f011681019083821181831017156116345761163461157c565b8160405282815288602084870101111561164d57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006116bc60208301848661167f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156105c8576105c86116c4565b6020808252601c908201527f43727970746f706174693a20696e76616c6964207175657374696f6e00000000604082015260600190565b808201808211156105c8576105c86116c4565b60006020828403121561176257600080fd5b815180151581146114b057600080fd5b60408152600061178660408301858761167f565b9050826020830152949350505050565b80820281158282048414176105c8576105c86116c456fea26469706673582212201a63ea3fb043cbf64354fff11980d4ed0f0cb135bbd690b9507b280c3b6749f864736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:588:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:86:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "134:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "143:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "146:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "136:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "136:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "136:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "93:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "104:5:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "119:1:16",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "122:3:16",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "115:3:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "115:11:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "128:1:16",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:19:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "100:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "100:31:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "90:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "90:42:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "83:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "83:50:16"
                  },
                  "nodeType": "YulIf",
                  "src": "80:70:16"
                }
              ]
            },
            "name": "validator_revert_contract_IAccuCoin",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "59:5:16",
                "type": ""
              }
            ],
            "src": "14:142:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "277:309:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "323:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "332:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "335:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "325:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "325:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "325:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "298:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "307:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "294:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "294:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "290:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "290:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "287:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "348:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "367:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "361:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "361:16:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "352:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "422:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IAccuCoin",
                      "nodeType": "YulIdentifier",
                      "src": "386:35:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "386:42:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "386:42:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "437:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "447:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "437:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "461:40:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "486:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "497:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "482:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "482:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "476:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "476:25:16"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "465:7:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "546:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IAccuCoin",
                      "nodeType": "YulIdentifier",
                      "src": "510:35:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:44:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "510:44:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "563:17:16",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "573:7:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "563:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IAccuCoin_$3153t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "235:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "246:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "258:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "266:6:16",
                "type": ""
              }
            ],
            "src": "161:425:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_IAccuCoin(value)\n    {\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IAccuCoin_$3153t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IAccuCoin(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IAccuCoin(value_1)\n        value1 := value_1\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14024:16",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:16",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "133:125:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "143:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "155:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "166:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "151:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "151:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "143:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "200:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "208:42:16",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "196:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "196:55:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "178:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:74:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "178:74:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IAccuCoin_$3153__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "102:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "113:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "124:4:16",
                "type": ""
              }
            ],
            "src": "14:244:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "336:275:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "385:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "394:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "397:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "387:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "387:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "387:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "364:6:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "372:4:16",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "360:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "360:17:16"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "379:3:16"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "356:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "356:27:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "349:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "349:35:16"
                  },
                  "nodeType": "YulIf",
                  "src": "346:55:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "410:30:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "433:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "420:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "420:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "410:6:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "483:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "492:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "495:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "485:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "485:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "485:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "455:6:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "463:18:16",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "452:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:30:16"
                  },
                  "nodeType": "YulIf",
                  "src": "449:50:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "508:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "524:6:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "532:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "520:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "520:17:16"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "508:8:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "589:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "598:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "601:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "591:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "591:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "591:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "560:6:16"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "568:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "556:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "556:19:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "552:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "552:30:16"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "584:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "549:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "549:39:16"
                  },
                  "nodeType": "YulIf",
                  "src": "546:59:16"
                }
              ]
            },
            "name": "abi_decode_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "299:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "307:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "315:8:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "325:6:16",
                "type": ""
              }
            ],
            "src": "263:348:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "723:372:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "769:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "778:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "781:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "771:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "771:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "771:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "744:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "753:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "740:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "740:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "765:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "736:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "736:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "733:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "794:37:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "821:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "808:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "808:23:16"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "798:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "874:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "883:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "886:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "876:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "876:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "876:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "846:6:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "854:18:16",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "843:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "843:30:16"
                  },
                  "nodeType": "YulIf",
                  "src": "840:50:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "899:85:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "956:9:16"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "967:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "952:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "952:22:16"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "976:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "925:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "925:59:16"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "903:8:16",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "913:8:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "993:18:16",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "1003:8:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "993:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1020:18:16",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "1030:8:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1020:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1047:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1074:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1085:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1070:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1070:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1057:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1057:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1047:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "673:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "684:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "696:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "704:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "712:6:16",
                "type": ""
              }
            ],
            "src": "616:479:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1145:109:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1232:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1241:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1244:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1234:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1234:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1234:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1168:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1179:5:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1186:42:16",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1175:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1175:54:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1165:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1165:65:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1158:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1158:73:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1155:93:16"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1134:5:16",
                "type": ""
              }
            ],
            "src": "1100:154:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1329:177:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1375:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1384:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1387:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1377:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1377:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1377:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1350:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1359:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1371:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1342:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1342:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1339:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1400:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1426:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1413:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1413:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1404:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1470:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1445:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1445:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1445:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1485:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1495:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1485:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1295:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1306:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1318:6:16",
                "type": ""
              }
            ],
            "src": "1259:247:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1640:119:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1650:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1662:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1673:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1658:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1658:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1650:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1692:9:16"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1703:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1685:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1685:25:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1685:25:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1730:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1741:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1726:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1726:18:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1746:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1719:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1719:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1719:34:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1601:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1612:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1620:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1631:4:16",
                "type": ""
              }
            ],
            "src": "1511:248:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1865:76:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1875:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1887:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1898:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1883:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1875:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1917:9:16"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1928:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1910:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:25:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1910:25:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1834:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1845:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1856:4:16",
                "type": ""
              }
            ],
            "src": "1764:177:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2036:321:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2082:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2091:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2094:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2084:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2084:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2084:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2057:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2066:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2053:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2053:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2078:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2049:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2046:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2107:37:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2134:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2121:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2121:23:16"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2111:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2187:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2196:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2199:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2189:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2189:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2189:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2159:6:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2167:18:16",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2156:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2156:30:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2153:50:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2212:85:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2269:9:16"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2280:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2265:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2265:22:16"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2289:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2238:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2238:59:16"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "2216:8:16",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "2226:8:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2306:18:16",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "2316:8:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2306:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2333:18:16",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "2343:8:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2333:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1994:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2005:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2017:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2025:6:16",
                "type": ""
              }
            ],
            "src": "1946:411:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2457:92:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2467:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2479:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2490:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2475:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2475:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2467:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2509:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2534:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2527:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2527:14:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2520:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2520:22:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2502:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2502:41:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2502:41:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2426:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2437:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2448:4:16",
                "type": ""
              }
            ],
            "src": "2362:187:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2655:125:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2665:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2677:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2688:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2673:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2673:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2665:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2707:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2722:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2730:42:16",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2718:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2718:55:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2700:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2700:74:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2700:74:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2624:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2635:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2646:4:16",
                "type": ""
              }
            ],
            "src": "2554:226:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2889:212:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2935:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2944:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2947:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2937:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2937:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2937:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2910:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2919:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2906:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2906:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2931:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2902:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2902:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2899:52:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2960:33:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2983:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2970:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2970:23:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2960:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3002:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3029:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3040:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3025:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3025:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3012:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3012:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3002:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3053:42:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3080:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3091:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3076:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3076:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3063:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3063:32:16"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3053:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2839:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2850:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2862:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2870:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2878:6:16",
                "type": ""
              }
            ],
            "src": "2785:316:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3259:162:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3269:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3281:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3292:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3277:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3277:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3269:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3311:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3328:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3322:5:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3322:13:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3304:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3304:32:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3304:32:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3356:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3367:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3352:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3352:20:16"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3398:6:16"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3406:4:16",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3394:3:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3394:17:16"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3388:5:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3388:24:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3381:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3381:32:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3374:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3374:40:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3345:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3345:70:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3345:70:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Question_$2588_memory_ptr__to_t_struct$_Question_$2588_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3228:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3239:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3250:4:16",
                "type": ""
              }
            ],
            "src": "3106:315:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3533:439:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3579:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3588:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3591:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3581:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3581:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3581:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3554:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3563:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3550:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3550:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3575:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3546:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3546:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3543:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3604:37:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3631:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3618:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3618:23:16"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3608:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3684:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3693:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3696:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3686:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3686:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3686:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3656:6:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3664:18:16",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3653:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3653:30:16"
                  },
                  "nodeType": "YulIf",
                  "src": "3650:50:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3709:85:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3766:9:16"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3777:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3762:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3762:22:16"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3786:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "3735:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3735:59:16"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "3713:8:16",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "3723:8:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3803:18:16",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "3813:8:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3803:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3830:18:16",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "3840:8:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3830:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3857:45:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3887:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3898:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3883:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3883:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3870:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3870:32:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3861:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3936:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3911:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3911:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3911:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3951:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3961:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3951:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3483:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3494:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3506:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3514:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3522:6:16",
                "type": ""
              }
            ],
            "src": "3426:546:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4065:177:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4111:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4120:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4123:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4113:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4113:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4113:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4086:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4095:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4082:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4082:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4107:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4078:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4078:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "4075:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4136:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4162:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4149:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4149:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4140:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4206:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4181:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4181:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4181:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4221:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4231:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4221:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IAccuCoin_$3153",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4031:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4042:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4054:6:16",
                "type": ""
              }
            ],
            "src": "3977:265:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4279:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4296:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4299:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4289:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4289:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4289:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4393:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4396:4:16",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4386:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4386:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4386:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4417:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4420:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4410:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4410:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4410:15:16"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "4247:184:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4533:960:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4579:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4588:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4591:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4581:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4581:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4581:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4554:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4563:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4550:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4550:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4575:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4546:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4546:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "4543:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4604:36:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4630:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4617:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4617:23:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4608:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4674:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4649:24:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4649:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4649:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4689:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4699:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4689:6:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4713:46:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4744:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4755:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4740:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4740:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4727:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4727:32:16"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4717:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4768:28:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4778:18:16",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4772:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4823:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4832:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4835:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4825:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4825:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4825:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4811:6:16"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4819:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4808:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4808:14:16"
                  },
                  "nodeType": "YulIf",
                  "src": "4805:34:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4848:32:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4862:9:16"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4873:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4858:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4858:22:16"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "4852:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4928:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4937:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4940:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4930:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4930:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4930:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "4907:2:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4911:4:16",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4903:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4903:13:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4918:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4899:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4899:27:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4892:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4892:35:16"
                  },
                  "nodeType": "YulIf",
                  "src": "4889:55:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4953:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "4976:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4963:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4963:16:16"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "4957:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5002:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5004:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5004:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5004:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "4994:2:16"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4998:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4991:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4991:10:16"
                  },
                  "nodeType": "YulIf",
                  "src": "4988:36:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5033:17:16",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5047:2:16",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "5043:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5043:7:16"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "5037:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5059:23:16",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5079:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5073:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5073:9:16"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "5063:6:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5091:71:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5113:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "5137:2:16"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5141:4:16",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5133:3:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5133:13:16"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5148:2:16"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5129:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5129:22:16"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5153:2:16",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5125:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5125:31:16"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "5158:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5121:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5121:40:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5109:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5109:53:16"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5095:10:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5221:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5223:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5223:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5223:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5180:10:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5192:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5177:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5177:18:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5200:10:16"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5212:6:16"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5197:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5197:22:16"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5174:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5174:46:16"
                  },
                  "nodeType": "YulIf",
                  "src": "5171:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5259:2:16",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5263:10:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5252:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5252:22:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5252:22:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5290:6:16"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "5298:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5283:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5283:18:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5283:18:16"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5347:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5356:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5359:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5349:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5349:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5349:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "5324:2:16"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "5328:2:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5320:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5320:11:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5333:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5316:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5316:20:16"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5338:7:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5313:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5313:33:16"
                  },
                  "nodeType": "YulIf",
                  "src": "5310:53:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5389:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5397:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5385:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5385:15:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "5406:2:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5410:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5402:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5402:11:16"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "5415:2:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "5372:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5372:46:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5372:46:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5442:6:16"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "5450:2:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5438:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5438:15:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5455:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5434:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5434:24:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5460:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5427:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5427:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5427:35:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5471:16:16",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "5481:6:16"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5471:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4491:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4502:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4514:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4522:6:16",
                "type": ""
              }
            ],
            "src": "4436:1057:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5677:222:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5687:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5699:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5710:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5695:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5695:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5687:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5730:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5755:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5748:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5748:14:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5741:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5741:22:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5723:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5723:41:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5723:41:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5784:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5795:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5780:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5780:18:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5800:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5773:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5773:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5773:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5827:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5838:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5823:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5823:18:16"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5843:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5816:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5816:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5816:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5870:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5881:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5866:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5866:18:16"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5886:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5859:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5859:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5859:34:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5622:9:16",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5633:6:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5641:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5649:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5657:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5668:4:16",
                "type": ""
              }
            ],
            "src": "5498:401:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6053:124:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6076:3:16"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6081:6:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6089:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "6063:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6063:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6063:33:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6105:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6119:3:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6124:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6115:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6115:16:16"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6109:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6147:2:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6151:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6140:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6140:13:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6140:13:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6162:9:16",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "6169:2:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6162:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6021:3:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6026:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6034:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6045:3:16",
                "type": ""
              }
            ],
            "src": "5904:273:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6356:226:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6373:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6384:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6366:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6366:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6366:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6407:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6418:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6403:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6403:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6423:2:16",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6396:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6396:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6396:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6446:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6457:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6442:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6442:18:16"
                      },
                      {
                        "hexValue": "43727970746f706174693a207175657374696f6e496420616c72656164792061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6462:34:16",
                        "type": "",
                        "value": "Cryptopati: questionId already a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6435:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6435:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6435:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6517:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6528:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6513:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6513:18:16"
                      },
                      {
                        "hexValue": "64646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6533:6:16",
                        "type": "",
                        "value": "dded"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6506:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6506:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6506:34:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6549:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6561:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6572:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6557:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6557:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6549:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d7af215c39ddb10181b9ec13b72df8d0f32b65862fdd45b7a783013dede2ee0d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6333:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6347:4:16",
                "type": ""
              }
            ],
            "src": "6182:400:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6654:200:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6671:3:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6676:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6664:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6664:19:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6664:19:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6709:3:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6714:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6705:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6705:14:16"
                      },
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "6721:5:16"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6728:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "6692:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6692:43:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6692:43:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "6759:3:16"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6764:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6755:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6755:16:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6773:4:16",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6751:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6751:27:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6780:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6744:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6744:38:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6744:38:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6791:57:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6806:3:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6819:6:16"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6827:2:16",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6815:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6815:15:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6836:2:16",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6832:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6832:7:16"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6811:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6811:29:16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6802:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6802:39:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6843:4:16",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6798:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6798:50:16"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6791:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "6623:5:16",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6630:6:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6638:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6646:3:16",
                "type": ""
              }
            ],
            "src": "6587:267:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6990:116:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7007:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7018:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7000:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7000:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7000:21:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7030:70:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7065:6:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7073:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7085:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7096:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7081:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7081:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "7038:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7038:62:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7030:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6951:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6962:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6970:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6981:4:16",
                "type": ""
              }
            ],
            "src": "6859:247:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7285:227:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7302:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7313:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7295:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7295:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7295:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7336:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7347:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7332:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7332:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7352:2:16",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7325:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7325:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7325:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7375:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7386:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7371:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7371:18:16"
                      },
                      {
                        "hexValue": "43727970746f706174693a20746f6b656e207265706c656e6973682069732070",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7391:34:16",
                        "type": "",
                        "value": "Cryptopati: token replenish is p"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7364:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7364:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7364:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7446:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7457:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7442:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7442:18:16"
                      },
                      {
                        "hexValue": "6175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7462:7:16",
                        "type": "",
                        "value": "aused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7435:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7435:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7435:35:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7479:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7491:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7502:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7487:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7487:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7479:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_775ed42ea860ca40cb0796de2bae048759a5343777962c82b49fe42afcdb3356__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7262:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7276:4:16",
                "type": ""
              }
            ],
            "src": "7111:401:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7549:152:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7566:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7569:77:16",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7559:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7559:88:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7559:88:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7663:1:16",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7666:4:16",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7656:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7656:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7656:15:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7687:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7690:4:16",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7680:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7680:15:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7680:15:16"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7517:184:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7755:79:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7765:17:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7777:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7780:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7773:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7773:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7765:4:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7806:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7808:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7808:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7808:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "7797:4:16"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7803:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7794:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7794:11:16"
                  },
                  "nodeType": "YulIf",
                  "src": "7791:37:16"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7737:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7740:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7746:4:16",
                "type": ""
              }
            ],
            "src": "7706:128:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8013:246:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8030:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8041:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8023:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8023:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8023:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8064:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8075:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8060:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8060:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8080:2:16",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8053:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8053:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8053:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8103:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8114:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8099:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8099:18:16"
                      },
                      {
                        "hexValue": "43727970746f706174693a2077616974207265706c656e697368206475726174",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8119:34:16",
                        "type": "",
                        "value": "Cryptopati: wait replenish durat"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8092:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8092:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8092:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8174:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8185:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8170:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8170:18:16"
                      },
                      {
                        "hexValue": "696f6e20746f20636c61696d206d6f726520746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8190:26:16",
                        "type": "",
                        "value": "ion to claim more tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8163:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8163:54:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8163:54:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8226:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8238:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8249:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8234:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8234:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8226:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_690a0f082da6cd056dd3968faf72244a4ada10374dc6eaf91449c93b6615446d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7990:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8004:4:16",
                "type": ""
              }
            ],
            "src": "7839:420:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8438:225:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8455:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8466:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8448:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8448:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8448:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8489:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8500:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8485:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8485:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8505:2:16",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8478:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8478:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8478:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8528:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8539:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8524:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8524:18:16"
                      },
                      {
                        "hexValue": "43727970746f706174693a20696e697469616c20636c61696d20697320706175",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8544:34:16",
                        "type": "",
                        "value": "Cryptopati: initial claim is pau"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8517:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8517:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8517:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8599:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8610:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8595:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8595:18:16"
                      },
                      {
                        "hexValue": "736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8615:5:16",
                        "type": "",
                        "value": "sed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8588:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8588:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8588:33:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8630:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8642:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8653:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8638:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8638:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8630:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8bcbdfad5625997364b74d9274b36c5337faaa23996805da6a6c7d6256e8312c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8415:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8429:4:16",
                "type": ""
              }
            ],
            "src": "8264:399:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8797:168:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8807:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8819:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8830:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8815:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8815:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8807:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8849:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8864:6:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8872:42:16",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8860:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8860:55:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8842:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8842:74:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8842:74:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8936:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8947:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8932:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8932:18:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8952:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8925:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8925:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8925:34:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8758:9:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8769:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8777:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8788:4:16",
                "type": ""
              }
            ],
            "src": "8668:297:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9144:178:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9161:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9172:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9154:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9154:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9154:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9195:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9206:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9191:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9191:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9211:2:16",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9184:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9184:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9184:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9234:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9245:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9230:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9230:18:16"
                      },
                      {
                        "hexValue": "43727970746f706174693a20696e76616c6964207175657374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9250:30:16",
                        "type": "",
                        "value": "Cryptopati: invalid question"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9223:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9223:58:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9223:58:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9290:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9302:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9313:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9298:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9298:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9290:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_34c804ff35e3623d736ae64ab25a36f20a12b8094fd0d63e0cf15359eb28f2b1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9121:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9135:4:16",
                "type": ""
              }
            ],
            "src": "8970:352:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9501:227:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9518:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9529:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9511:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9511:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9511:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9552:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9563:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9548:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9548:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9568:2:16",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9541:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9541:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9541:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9591:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9602:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9587:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9587:18:16"
                      },
                      {
                        "hexValue": "43727970746f706174693a205175657374696f6e20616c726561647920756e6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9607:34:16",
                        "type": "",
                        "value": "Cryptopati: Question already unl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9580:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9580:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9580:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9662:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9673:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9658:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9658:18:16"
                      },
                      {
                        "hexValue": "6f636b6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9678:7:16",
                        "type": "",
                        "value": "ocked"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9651:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9651:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9651:35:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9695:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9707:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9718:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9703:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9703:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9695:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d36f5a91d3fce31b1d6416a6b22b954d27d02cd526f1c2113a8cce8f0333ea91__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9478:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9492:4:16",
                "type": ""
              }
            ],
            "src": "9327:401:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9907:180:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9924:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9935:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9917:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9917:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9917:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9958:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9969:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9954:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9954:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9974:2:16",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9947:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9947:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9947:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9997:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10008:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9993:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9993:18:16"
                      },
                      {
                        "hexValue": "43727970746f706174693a20436f6d6d697420416d6f756e74205a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10013:32:16",
                        "type": "",
                        "value": "Cryptopati: Commit Amount Zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9986:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9986:60:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9986:60:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10055:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10067:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10078:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10063:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10063:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10055:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e43ae9a994913c784b3df08f19e4163cccb5465942ed24bb396215a463a49fc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9884:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9898:4:16",
                "type": ""
              }
            ],
            "src": "9733:354:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10140:77:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10150:16:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10161:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10164:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10157:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10157:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10150:3:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10189:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10191:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10191:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10191:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10181:1:16"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "10184:3:16"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10178:2:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10178:10:16"
                  },
                  "nodeType": "YulIf",
                  "src": "10175:36:16"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10123:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10126:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10132:3:16",
                "type": ""
              }
            ],
            "src": "10092:125:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10379:241:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10389:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10401:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10412:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10397:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10397:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10389:4:16"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10424:52:16",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10434:42:16",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10428:2:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10492:9:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10507:6:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10515:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10503:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10503:15:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10485:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10485:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10485:34:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10539:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10550:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10535:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10535:18:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10559:6:16"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10567:2:16"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10555:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10555:15:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10528:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10528:43:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10528:43:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10591:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10602:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10587:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10587:18:16"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10607:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10580:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10580:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10580:34:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10332:9:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10343:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10351:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10359:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10370:4:16",
                "type": ""
              }
            ],
            "src": "10222:398:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10703:199:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10749:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10758:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10761:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10751:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10751:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10751:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10724:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10733:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10720:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10720:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10745:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10716:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10716:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "10713:52:16"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10774:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10793:9:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10787:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10787:16:16"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10778:5:16",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10856:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10865:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10868:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10858:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10858:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10858:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10825:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10846:5:16"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "10839:6:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10839:13:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10832:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10832:21:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10822:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10822:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10815:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10815:40:16"
                  },
                  "nodeType": "YulIf",
                  "src": "10812:60:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10881:15:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10891:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10881:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10669:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10680:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10692:6:16",
                "type": ""
              }
            ],
            "src": "10625:277:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11066:159:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11083:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11094:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11076:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11076:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11076:21:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11106:70:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "11141:6:16"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11149:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11161:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11172:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11157:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11157:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "11114:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11114:62:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11106:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11196:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11207:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11192:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11192:18:16"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11212:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11185:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11185:34:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11185:34:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11019:9:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11030:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11038:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11046:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11057:4:16",
                "type": ""
              }
            ],
            "src": "10907:318:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11404:175:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11421:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11432:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11414:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11414:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11414:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11455:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11466:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11451:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11451:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11471:2:16",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11444:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11444:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11444:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11494:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11505:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11490:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11490:18:16"
                      },
                      {
                        "hexValue": "43727970746f706174693a206f6e6c7920706c6174666f726d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11510:27:16",
                        "type": "",
                        "value": "Cryptopati: only platform"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11483:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11483:55:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11483:55:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11547:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11559:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11570:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11555:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11555:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11547:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_061dd55b66bdb2cfd2bc5f2f4635aeea50de2307167efdc3a1b9984caa8dc03e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11381:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11395:4:16",
                "type": ""
              }
            ],
            "src": "11230:349:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11758:223:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11775:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11786:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11768:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11768:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11768:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11809:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11820:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11805:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11805:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11825:2:16",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11798:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11798:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11798:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11848:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11859:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11844:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11844:18:16"
                      },
                      {
                        "hexValue": "43727970746f706174693a205175657374696f6e206e6f7420756e6c6f636b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11864:34:16",
                        "type": "",
                        "value": "Cryptopati: Question not unlocke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11837:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11837:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11837:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11919:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11930:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11915:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11915:18:16"
                      },
                      {
                        "hexValue": "64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11935:3:16",
                        "type": "",
                        "value": "d"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11908:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11908:31:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11908:31:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11948:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11960:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11971:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11956:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11956:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11948:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c59cc889c7fda88f4e08c0d4ff282ddeec4960a47ab47055e7e68b883a193afb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11735:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11749:4:16",
                "type": ""
              }
            ],
            "src": "11584:397:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12160:227:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12177:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12188:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12170:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12170:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12170:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12211:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12222:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12207:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12207:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12227:2:16",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12200:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12200:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12200:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12250:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12261:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12246:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12246:18:16"
                      },
                      {
                        "hexValue": "43727970746f706174693a205175657374696f6e20616c726561647920616e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12266:34:16",
                        "type": "",
                        "value": "Cryptopati: Question already ans"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12239:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12239:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12239:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12321:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12332:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12317:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12317:18:16"
                      },
                      {
                        "hexValue": "7765726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12337:7:16",
                        "type": "",
                        "value": "wered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12310:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12310:35:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12310:35:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12354:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12366:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12377:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12362:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12362:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12354:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cdd664fd06fb3446f04bae85a3a95fde8b41ce6dff0836880efa3f942b48b967__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12137:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12151:4:16",
                "type": ""
              }
            ],
            "src": "11986:401:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12444:116:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12454:20:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12469:1:16"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12472:1:16"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12465:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12465:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "12454:7:16"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12532:22:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12534:16:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12534:18:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12534:18:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12503:1:16"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12496:6:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12496:9:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "12510:1:16"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "12517:7:16"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12526:1:16"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "12513:3:16"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12513:15:16"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "12507:2:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12507:22:16"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "12493:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12493:37:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12486:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12486:45:16"
                  },
                  "nodeType": "YulIf",
                  "src": "12483:71:16"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12423:1:16",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12426:1:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12432:7:16",
                "type": ""
              }
            ],
            "src": "12392:168:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12739:228:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12756:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12767:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12749:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12749:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12749:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12790:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12801:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12786:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12786:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12806:2:16",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12779:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12779:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12779:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12829:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12840:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12825:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12825:18:16"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12845:34:16",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12818:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12818:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12818:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12900:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12911:2:16",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12896:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12896:18:16"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12916:8:16",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12889:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12889:36:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12889:36:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12934:27:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12946:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12957:3:16",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12942:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12942:19:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12934:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12716:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12730:4:16",
                "type": ""
              }
            ],
            "src": "12565:402:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13146:182:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13163:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13174:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13156:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13156:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13156:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13197:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13208:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13193:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13193:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13213:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13186:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13186:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13186:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13236:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13247:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13232:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13232:18:16"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13252:34:16",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13225:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13225:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13225:62:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13296:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13308:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13319:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13304:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13304:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13296:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13123:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13137:4:16",
                "type": ""
              }
            ],
            "src": "12972:356:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13507:166:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13524:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13535:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13517:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13517:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13517:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13558:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13569:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13554:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13554:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13574:2:16",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13547:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13547:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13547:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13597:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13608:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13593:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13593:18:16"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13613:18:16",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13586:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13586:46:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13586:46:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13641:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13653:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13664:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13649:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13649:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13641:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13484:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13498:4:16",
                "type": ""
              }
            ],
            "src": "13333:340:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13852:170:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13869:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13880:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13862:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13862:21:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13862:21:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13903:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13914:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13899:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13899:18:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13919:2:16",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13892:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13892:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13892:30:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13942:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13953:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13938:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13938:18:16"
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13958:22:16",
                        "type": "",
                        "value": "Pausable: not paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13931:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13931:50:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13931:50:16"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13990:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14002:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14013:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13998:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13998:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13990:4:16"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13829:9:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13843:4:16",
                "type": ""
              }
            ],
            "src": "13678:344:16"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IAccuCoin_$3153__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_struct$_Question_$2588_memory_ptr__to_t_struct$_Question_$2588_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), iszero(iszero(mload(add(value0, 0x20)))))\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_contract$_IAccuCoin_$3153(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_d7af215c39ddb10181b9ec13b72df8d0f32b65862fdd45b7a783013dede2ee0d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Cryptopati: questionId already a\")\n        mstore(add(headStart, 96), \"dded\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_775ed42ea860ca40cb0796de2bae048759a5343777962c82b49fe42afcdb3356__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Cryptopati: token replenish is p\")\n        mstore(add(headStart, 96), \"aused\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_690a0f082da6cd056dd3968faf72244a4ada10374dc6eaf91449c93b6615446d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Cryptopati: wait replenish durat\")\n        mstore(add(headStart, 96), \"ion to claim more tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8bcbdfad5625997364b74d9274b36c5337faaa23996805da6a6c7d6256e8312c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Cryptopati: initial claim is pau\")\n        mstore(add(headStart, 96), \"sed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_34c804ff35e3623d736ae64ab25a36f20a12b8094fd0d63e0cf15359eb28f2b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Cryptopati: invalid question\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d36f5a91d3fce31b1d6416a6b22b954d27d02cd526f1c2113a8cce8f0333ea91__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Cryptopati: Question already unl\")\n        mstore(add(headStart, 96), \"ocked\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9e43ae9a994913c784b3df08f19e4163cccb5465942ed24bb396215a463a49fc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Cryptopati: Commit Amount Zero\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_061dd55b66bdb2cfd2bc5f2f4635aeea50de2307167efdc3a1b9984caa8dc03e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Cryptopati: only platform\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c59cc889c7fda88f4e08c0d4ff282ddeec4960a47ab47055e7e68b883a193afb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Cryptopati: Question not unlocke\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cdd664fd06fb3446f04bae85a3a95fde8b41ce6dff0836880efa3f942b48b967__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Cryptopati: Question already ans\")\n        mstore(add(headStart, 96), \"wered\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "269:8411:13:-:0;;;483:9;452:40;;539:37;;;572:4;-1:-1:-1;;539:37:13;;;;;;;;686:8;653:41;;783:7;748:42;;848:34;;;;;;;;;;;2276:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:2;955:12;:10;;;;:12;:::i;:::-;936:18;;;;:32;:::i;:::-;1006:5:3;996:15;;-1:-1:-1;;;;;;996:15:3;;;;2349:20:13;;-1:-1:-1;;;;;2349:20:13;;::::1;-1:-1:-1::0;;;;;;2349:20:13;;::::1;;::::0;;;2380:8:::1;:20:::0;;;;;::::1;::::0;::::1;;::::0;;269:8411;;640:96:7;719:10;;640:96::o;2433:187:2:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:142:16:-;-1:-1:-1;;;;;100:31:16;;90:42;;80:70;;146:1;143;136:12;80:70;14:142;:::o;161:425::-;258:6;266;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;367:9;361:16;386:42;422:5;386:42;:::i;:::-;497:2;482:18;;476:25;447:5;;-1:-1:-1;510:44:16;476:25;510:44;:::i;:::-;573:7;563:17;;;161:425;;;;;:::o;:::-;269:8411:13;;;;;;",
  "deployedSourceMap": "269:8411:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:25;;;;;-1:-1:-1;;;;;317:25:13;;;;;;-1:-1:-1;;;;;196:55:16;;;178:74;;166:2;151:18;317:25:13;;;;;;;;5901:352;;;;;;:::i;:::-;;:::i;:::-;;1490:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1685:25:16;;;1741:2;1726:18;;1719:34;;;;1658:18;1490:40:13;1511:248:16;748:42:13;;;;;;;;;1910:25:16;;;1898:2;1883:18;748:42:13;1764:177:16;5316:148:13;;;;;;:::i;:::-;;:::i;:::-;;;2527:14:16;;2520:22;2502:41;;2490:2;2475:18;5316:148:13;2362:187:16;848:34:13;;;;;;;;;2683:67;;;:::i;1632:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;4368:812;;;:::i;377:23::-;;;;;-1:-1:-1;;;;;377:23:13;;;3529:105;;;:::i;6454:774::-;;;;;;:::i;:::-;;:::i;1615:84:3:-;1662:4;1685:7;;;;;;1615:84;;3131:98:13;;;;;;:::i;:::-;;:::i;3962:298::-;;;;;;:::i;:::-;;:::i;1831:101:2:-;;;:::i;653:41:13:-;;;;;;2513:63;;;:::i;1201:85:2:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:2;1201:85;;539:37:13;;;;;;;;;3321:114;;;:::i;5595:175::-;;;;;;:::i;:::-;;:::i;:::-;;;;3322:13:16;;3304:32;;3406:4;3394:17;;;3388:24;3381:32;3374:40;3352:20;;;3345:70;;;;3277:18;5595:175:13;3106:315:16;7438:1239:13;;;;;;:::i;:::-;;:::i;2882:100::-;;;;;;:::i;:::-;;:::i;2081:198:2:-;;;;;;:::i;:::-;;:::i;452:40:13:-;;;;;;1537:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5748:14:16;;5741:22;5723:41;;5795:2;5780:18;;5773:34;;;;5823:18;;;5816:34;5881:2;5866:18;;5859:34;5710:3;5695:19;1537:88:13;5498:401:16;5901:352:13;1094:13:2;:11;:13::i;:::-;6048:10:13::1;6059;;6048:22;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:28:::1;;::::0;::::1;;6047:29;6025:115;;;::::0;-1:-1:-1;;;;;6025:115:13;;6384:2:16;6025:115:13::1;::::0;::::1;6366:21:16::0;6423:2;6403:18;;;6396:30;6462:34;6442:18;;;6435:62;6533:6;6513:18;;;6506:34;6557:19;;6025:115:13::1;;;;;;;;;6178:26;::::0;;;;::::1;::::0;;;;;6199:4:::1;6178:26;::::0;::::1;::::0;6153:22;;:10:::1;::::0;:22:::1;::::0;6164:10;;;;6153:22:::1;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;:51;;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;6153:51:13::1;::::0;::::1;;::::0;;;::::1;::::0;;;6222:23:::1;::::0;::::1;::::0;6234:10;;;;6222:23:::1;:::i;:::-;;;;;;;;5901:352:::0;;;:::o;5316:148::-;5404:4;5428:10;5439;;5428:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;:28;;;;;;-1:-1:-1;5316:148:13;;;;;:::o;2683:67::-;1094:13:2;:11;:13::i;:::-;2732:10:13::1;:8;:10::i;:::-;2683:67::o:0;4368:812::-;4450:19;1239::3;:17;:19::i;:::-;4505:10:13::1;4491:25;::::0;;;:13:::1;:25;::::0;;;;;:30;4487:531:::1;;4546:15;::::0;::::1;;4538:65;;;::::0;-1:-1:-1;;;;;4538:65:13;;7313:2:16;4538:65:13::1;::::0;::::1;7295:21:16::0;7352:2;7332:18;;;7325:30;7391:34;7371:18;;;7364:62;7462:7;7442:18;;;7435:35;7487:19;;4538:65:13::1;7111:401:16::0;4538:65:13::1;4712:17;::::0;4676:10:::1;4662:25;::::0;;;:13:::1;:25;::::0;;;;;4644:43:::1;::::0;:15:::1;:43;:::i;:::-;:85;;4618:203;;;::::0;-1:-1:-1;;;;;4618:203:13;;8041:2:16;4618:203:13::1;::::0;::::1;8023:21:16::0;8080:2;8060:18;;;8053:30;8119:34;8099:18;;;8092:62;8190:26;8170:18;;;8163:54;8234:19;;4618:203:13::1;7839:420:16::0;4618:203:13::1;-1:-1:-1::0;4850:15:13::1;::::0;4487:531:::1;;;4906:18;::::0;::::1;;4898:66;;;::::0;-1:-1:-1;;;;;4898:66:13;;8466:2:16;4898:66:13::1;::::0;::::1;8448:21:16::0;8505:2;8485:18;;;8478:30;8544:34;8524:18;;;8517:62;8615:5;8595:18;;;8588:33;8638:19;;4898:66:13::1;8264:399:16::0;4898:66:13::1;-1:-1:-1::0;4993:13:13::1;::::0;4487:531:::1;5042:10;5028:25;::::0;;;:13:::1;:25;::::0;;;;;;5056:15:::1;5028:43:::0;;5082:8:::1;::::0;:38;;;;;::::1;::::0;::::1;8842:74:16::0;;;;8932:18;;;8925:34;;;-1:-1:-1;;;;;5082:8:13::1;::::0;:13:::1;::::0;8815:18:16;;5082:38:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5136:36:13::1;::::0;1910:25:16;;;5148:10:13::1;::::0;-1:-1:-1;5136:36:13::1;::::0;-1:-1:-1;1898:2:16;1883:18;5136:36:13::1;;;;;;;4368:812:::0;:::o;3529:105::-;1094:13:2;:11;:13::i;:::-;3611:15:13::1;::::0;;-1:-1:-1;;3592:34:13;::::1;3611:15;::::0;;::::1;3610:16;3592:34;::::0;;3529:105::o;6454:774::-;1239:19:3;:17;:19::i;:::-;6586:10:13::1;;2190:25;2204:10;;2190:13;:25::i;:::-;2182:66;;;;-1:-1:-1::0;;;;;2182:66:13::1;;;;;;;:::i;:::-;6648:10:::2;6631:28;::::0;;;:16:::2;:28;::::0;;;;;;:40;;::::2;::::0;6660:10;;;;6631:40:::2;:::i;:::-;;;;;;;;;;;;;:56;;;6691:1;6631:61;6609:148;;;::::0;-1:-1:-1;;;;;6609:148:13;;9529:2:16;6609:148:13::2;::::0;::::2;9511:21:16::0;9568:2;9548:18;;;9541:30;9607:34;9587:18;;;9580:62;9678:7;9658:18;;;9651:35;9703:19;;6609:148:13::2;9327:401:16::0;6609:148:13::2;6776:12;6792:1;6776:17:::0;6768:60:::2;;;::::0;-1:-1:-1;;;;;6768:60:13;;9935:2:16;6768:60:13::2;::::0;::::2;9917:21:16::0;9974:2;9954:18;;;9947:30;10013:32;9993:18;;;9986:60;10063:18;;6768:60:13::2;9733:354:16::0;6768:60:13::2;6858:10;6841:28;::::0;;;:16:::2;:28;::::0;;;;;;:40;;6897:12;;6841:28;:40:::2;::::0;6870:10;;;;6841:40:::2;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;:53:::2;;:68:::0;;;;6937:10:::2;6920:28;::::0;;;:16:::2;:28:::0;;;;;6979:29:::2;::::0;6920:40:::2;::::0;6949:10;;;;6920:40:::2;:::i;:::-;::::0;;;::::2;::::0;;::::2;::::0;;;;;;;;:56:::2;;:88:::0;;;;7030:10:::2;7021:20;::::0;;;:8:::2;:20:::0;;;;;;:54;;7063:12;;7021:20;:54:::2;::::0;7063:12;;7021:54:::2;:::i;:::-;::::0;;;-1:-1:-1;;7088:8:13::2;::::0;:62:::2;::::0;;;;7110:10:::2;7088:62;::::0;::::2;10485:34:16::0;7130:4:13::2;10535:18:16::0;;;10528:43;10587:18;;;10580:34;;;-1:-1:-1;;;;;7088:8:13;;::::2;::::0;:21:::2;::::0;10397:18:16;;7088:62:13::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7183:10;-1:-1:-1::0;;;;;7168:52:13::2;;7195:10;;7207:12;7168:52;;;;;;;;:::i;:::-;;;;;;;;1268:1:3::1;;6454:774:13::0;;;:::o;3131:98::-;1094:13:2;:11;:13::i;:::-;3201:8:13::1;:20:::0;;-1:-1:-1;;3201:20:13::1;-1:-1:-1::0;;;;;3201:20:13;;;::::1;::::0;;;::::1;::::0;;3131:98::o;3962:298::-;1094:13:2;:11;:13::i;:::-;4128::13::1;:30:::0;;;;4169:15:::1;:34:::0;4214:17:::1;:38:::0;3962:298::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;2513:63:13:-:0;1094:13:2;:11;:13::i;:::-;2560:8:13::1;:6;:8::i;3321:114::-:0;1094:13:2;:11;:13::i;:::-;3409:18:13::1;::::0;;-1:-1:-1;;3387:40:13;::::1;3409:18;::::0;;::::1;3408:19;3387:40;::::0;;3321:114::o;5595:175::-;-1:-1:-1;;;;;;;;;;;;;;;;;5684:10:13;;2190:25;2204:10;;2190:13;:25::i;:::-;2182:66;;;;-1:-1:-1;;;;;2182:66:13;;;;;;;:::i;:::-;5740:10:::1;5751;;5740:22;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;;;5733:29;;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;::::1;;;;::::0;;::::1;::::0;5740:22;-1:-1:-1;5595:175:13;;;;;;:::o;7438:1239::-;7553:10;;2190:25;2204:10;;2190:13;:25::i;:::-;2182:66;;;;-1:-1:-1;;;;;2182:66:13;;;;;;;:::i;:::-;7598:8:::1;::::0;-1:-1:-1;;;;;7598:8:13::1;7584:10;:22;7576:60;;;::::0;-1:-1:-1;;;;;7576:60:13;;11432:2:16;7576:60:13::1;::::0;::::1;11414:21:16::0;11471:2;11451:18;;;11444:30;11510:27;11490:18;;;11483:55;11555:18;;7576:60:13::1;11230:349:16::0;7576:60:13::1;-1:-1:-1::0;;;;;7669:30:13;::::1;;::::0;;;:16:::1;:30;::::0;;;;;;:42;;::::1;::::0;7700:10;;;;7669:42:::1;:::i;:::-;;;;;;;;;;;;;:58;;;7731:1;7669:63:::0;7647:146:::1;;;::::0;-1:-1:-1;;;;;7647:146:13;;11786:2:16;7647:146:13::1;::::0;::::1;11768:21:16::0;11825:2;11805:18;;;11798:30;11864:34;11844:18;;;11837:62;11935:3;11915:18;;;11908:31;11956:19;;7647:146:13::1;11584:397:16::0;7647:146:13::1;-1:-1:-1::0;;;;;7827:30:13;::::1;;::::0;;;:16:::1;:30;::::0;;;;;;:42;;::::1;::::0;7858:10;;;;7827:42:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:51;::::1;;7826:52;7804:139;;;::::0;-1:-1:-1;;;;;7804:139:13;;12188:2:16;7804:139:13::1;::::0;::::1;12170:21:16::0;12227:2;12207:18;;;12200:30;12266:34;12246:18;;;12239:62;12337:7;12317:18;;;12310:35;12362:19;;7804:139:13::1;11986:401:16::0;7804:139:13::1;-1:-1:-1::0;;;;;7956:30:13;::::1;;::::0;;;:16:::1;:30;::::0;;;;;;:42;;8010:4:::1;::::0;7956:30;:42:::1;::::0;7987:10;;;;7956:42:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;:58;;-1:-1:-1;;7956:58:13::1;::::0;::::1;;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;8052:30:13;::::1;-1:-1:-1::0;8052:30:13;;;:16:::1;:30:::0;;;;;-1:-1:-1;;8052:42:13::1;::::0;8083:10;;;;8052:42:::1;:::i;:::-;;;;;;;;;;;;;:69;;;8025:96;;8132:27;8194:10;8205;;8194:22;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:33;8162:65:::1;::::0;:16;:65:::1;:::i;:::-;8132:95:::0;-1:-1:-1;8257:38:13::1;8279:16:::0;8132:95;8257:38:::1;:::i;:::-;8238:16;:57:::0;-1:-1:-1;;;;;8306:30:13;::::1;;::::0;;;:16:::1;:30;::::0;;;;;;:42;;8381:19;;8306:30;:42:::1;::::0;8337:10;;;;8306:42:::1;:::i;:::-;;;;;;;;;;;;;:72;;:94;;;;8460:19;8413:8;:22;8422:12;-1:-1:-1::0;;;;;8413:22:13::1;-1:-1:-1::0;;;;;8413:22:13::1;;;;;;;;;;;;:43;;;:66;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;8490:8:13::1;::::0;8518:16:::1;::::0;8490:45:::1;::::0;;;;-1:-1:-1;;;;;8860:55:16;;;8490:45:13::1;::::0;::::1;8842:74:16::0;8932:18;;;8925:34;;;;8490:8:13;::::1;::::0;:13:::1;::::0;8815:18:16;;8490:45:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;8546:8:13::1;::::0;:49:::1;::::0;;;;-1:-1:-1;;;;;8860:55:16;;;8546:49:13::1;::::0;::::1;8842:74:16::0;8932:18;;;8925:34;;;8546:8:13;;::::1;::::0;-1:-1:-1;8546:17:13::1;::::0;-1:-1:-1;8815:18:16;;8546:49:13::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8623:12;-1:-1:-1::0;;;;;8611:58:13::1;;8637:10;;8649:19;8611:58;;;;;;;;:::i;:::-;;;;;;;;7565:1112;;7438:1239:::0;;;;;:::o;2882:100::-;1094:13:2;:11;:13::i;:::-;2954:8:13::1;:20:::0;;-1:-1:-1;;2954:20:13::1;-1:-1:-1::0;;;;;2954:20:13;;;::::1;::::0;;;::::1;::::0;;2882:100::o;2081:198:2:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:2;::::1;2161:73;;;::::0;-1:-1:-1;;;;;2161:73:2;;12767:2:16;2161:73:2::1;::::0;::::1;12749:21:16::0;12806:2;12786:18;;;12779:30;12845:34;12825:18;;;12818:62;12916:8;12896:18;;;12889:36;12942:19;;2161:73:2::1;12565:402:16::0;2161:73:2::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:2;719:10:7;1422:23:2;1414:68;;;;-1:-1:-1;;;;;1414:68:2;;13174:2:16;1414:68:2;;;13156:21:16;;;13193:18;;;13186:30;13252:34;13232:18;;;13225:62;13304:18;;1414:68:2;12972:356:16;2433:117:3;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;-1:-1:-1;;2491:15:3::1;::::0;;2521:22:::1;719:10:7::0;2530:12:3::1;2521:22;::::0;-1:-1:-1;;;;;196:55:16;;;178:74;;166:2;151:18;2521:22:3::1;;;;;;;2433:117::o:0;1767:106::-;1662:4;1685:7;;;;;;1836:9;1828:38;;;;-1:-1:-1;;;;;1828:38:3;;13535:2:16;1828:38:3;;;13517:21:16;13574:2;13554:18;;;13547:30;13613:18;13593;;;13586:46;13649:18;;1828:38:3;13333:340:16;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2186:115:3:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:3::1;::::0;::::1;::::0;;2274:20:::1;2281:12;719:10:7::0;;640:96;1945:106:3;1662:4;1685:7;;;;;;2003:41;;;;-1:-1:-1;;;;;2003:41:3;;13880:2:16;2003:41:3;;;13862:21:16;13919:2;13899:18;;;13892:30;13958:22;13938:18;;;13931:50;13998:18;;2003:41:3;13678:344:16;263:348;315:8;325:6;379:3;372:4;364:6;360:17;356:27;346:55;;397:1;394;387:12;346:55;-1:-1:-1;420:20:16;;463:18;452:30;;449:50;;;495:1;492;485:12;449:50;532:4;524:6;520:17;508:29;;584:3;577:4;568:6;560;556:19;552:30;549:39;546:59;;;601:1;598;591:12;546:59;263:348;;;;;:::o;616:479::-;696:6;704;712;765:2;753:9;744:7;740:23;736:32;733:52;;;781:1;778;771:12;733:52;821:9;808:23;854:18;846:6;843:30;840:50;;;886:1;883;876:12;840:50;925:59;976:7;967:6;956:9;952:22;925:59;:::i;:::-;1003:8;;899:85;;-1:-1:-1;1085:2:16;1070:18;;;;1057:32;;616:479;-1:-1:-1;;;;616:479:16:o;1100:154::-;-1:-1:-1;;;;;1179:5:16;1175:54;1168:5;1165:65;1155:93;;1244:1;1241;1234:12;1259:247;1318:6;1371:2;1359:9;1350:7;1346:23;1342:32;1339:52;;;1387:1;1384;1377:12;1339:52;1426:9;1413:23;1445:31;1470:5;1445:31;:::i;:::-;1495:5;1259:247;-1:-1:-1;;;1259:247:16:o;1946:411::-;2017:6;2025;2078:2;2066:9;2057:7;2053:23;2049:32;2046:52;;;2094:1;2091;2084:12;2046:52;2134:9;2121:23;2167:18;2159:6;2156:30;2153:50;;;2199:1;2196;2189:12;2153:50;2238:59;2289:7;2280:6;2269:9;2265:22;2238:59;:::i;:::-;2316:8;;2212:85;;-1:-1:-1;1946:411:16;-1:-1:-1;;;;1946:411:16:o;2785:316::-;2862:6;2870;2878;2931:2;2919:9;2910:7;2906:23;2902:32;2899:52;;;2947:1;2944;2937:12;2899:52;-1:-1:-1;;2970:23:16;;;3040:2;3025:18;;3012:32;;-1:-1:-1;3091:2:16;3076:18;;;3063:32;;2785:316;-1:-1:-1;2785:316:16:o;3426:546::-;3506:6;3514;3522;3575:2;3563:9;3554:7;3550:23;3546:32;3543:52;;;3591:1;3588;3581:12;3543:52;3631:9;3618:23;3664:18;3656:6;3653:30;3650:50;;;3696:1;3693;3686:12;3650:50;3735:59;3786:7;3777:6;3766:9;3762:22;3735:59;:::i;:::-;3813:8;;-1:-1:-1;3709:85:16;-1:-1:-1;;3898:2:16;3883:18;;3870:32;3911:31;3870:32;3911:31;:::i;:::-;3961:5;3951:15;;;3426:546;;;;;:::o;4247:184::-;4299:77;4296:1;4289:88;4396:4;4393:1;4386:15;4420:4;4417:1;4410:15;4436:1057;4514:6;4522;4575:2;4563:9;4554:7;4550:23;4546:32;4543:52;;;4591:1;4588;4581:12;4543:52;4630:9;4617:23;4649:31;4674:5;4649:31;:::i;:::-;4699:5;-1:-1:-1;4755:2:16;4740:18;;4727:32;4778:18;4808:14;;;4805:34;;;4835:1;4832;4825:12;4805:34;4873:6;4862:9;4858:22;4848:32;;4918:7;4911:4;4907:2;4903:13;4899:27;4889:55;;4940:1;4937;4930:12;4889:55;4976:2;4963:16;4998:2;4994;4991:10;4988:36;;;5004:18;;:::i;:::-;5079:2;5073:9;5047:2;5133:13;;-1:-1:-1;;5129:22:16;;;5153:2;5125:31;5121:40;5109:53;;;5177:18;;;5197:22;;;5174:46;5171:72;;;5223:18;;:::i;:::-;5263:10;5259:2;5252:22;5298:2;5290:6;5283:18;5338:7;5333:2;5328;5324;5320:11;5316:20;5313:33;5310:53;;;5359:1;5356;5349:12;5310:53;5415:2;5410;5406;5402:11;5397:2;5389:6;5385:15;5372:46;5460:1;5455:2;5450;5442:6;5438:15;5434:24;5427:35;5481:6;5471:16;;;;;;;4436:1057;;;;;:::o;5904:273::-;6089:6;6081;6076:3;6063:33;6045:3;6115:16;;6140:13;;;6115:16;5904:273;-1:-1:-1;5904:273:16:o;6587:267::-;6676:6;6671:3;6664:19;6728:6;6721:5;6714:4;6709:3;6705:14;6692:43;-1:-1:-1;6780:1:16;6755:16;;;6773:4;6751:27;;;6744:38;;;;6836:2;6815:15;;;-1:-1:-1;;6811:29:16;6802:39;;;6798:50;;6587:267::o;6859:247::-;7018:2;7007:9;7000:21;6981:4;7038:62;7096:2;7085:9;7081:18;7073:6;7065;7038:62;:::i;:::-;7030:70;6859:247;-1:-1:-1;;;;6859:247:16:o;7517:184::-;7569:77;7566:1;7559:88;7666:4;7663:1;7656:15;7690:4;7687:1;7680:15;7706:128;7773:9;;;7794:11;;;7791:37;;;7808:18;;:::i;8970:352::-;9172:2;9154:21;;;9211:2;9191:18;;;9184:30;9250;9245:2;9230:18;;9223:58;9313:2;9298:18;;8970:352::o;10092:125::-;10157:9;;;10178:10;;;10175:36;;;10191:18;;:::i;10625:277::-;10692:6;10745:2;10733:9;10724:7;10720:23;10716:32;10713:52;;;10761:1;10758;10751:12;10713:52;10793:9;10787:16;10846:5;10839:13;10832:21;10825:5;10822:32;10812:60;;10868:1;10865;10858:12;10907:318;11094:2;11083:9;11076:21;11057:4;11114:62;11172:2;11161:9;11157:18;11149:6;11141;11114:62;:::i;:::-;11106:70;;11212:6;11207:2;11196:9;11192:18;11185:34;10907:318;;;;;;:::o;12392:168::-;12465:9;;;12496;;12513:15;;;12507:22;;12493:37;12483:71;;12534:18;;:::i",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.17;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"./interfaces/IAccuCoin.sol\";\r\n\r\ncontract Cryptopati is Ownable, Pausable {\r\n    IAccuCoin public accuCoin; // Address of the Accu Coin\r\n    address public platform; // Platform wallet manages certain functions\r\n    uint256 public initialAmount = 100 ether; // Amount that can be claimed initially\r\n    bool public isInitialClaimable = true; // Boolean indicating whether the initial claiming for tokens is open\r\n    uint256 public replenishAmount = 10 ether; // Amount that can be claimed when replenished\r\n    uint256 public replenishDuration = 4 hours; // Duration after which tokens will be replenished\r\n    bool public isReplenishable = true; // Boolean indicating whether the claiming for tokens is replenishable\r\n    uint256 private multiplierAmount; //multiplier amount of the users invested token to a question\r\n    struct Question {\r\n        uint256 multiplier;\r\n        bool exist;\r\n    }\r\n    struct UserToQuestionId {\r\n        bool answered;\r\n        uint256 unlockTimestamp;\r\n        uint256 commitAmount;\r\n        uint256 collectedAmount;\r\n    }\r\n\r\n    struct User {\r\n        uint256 totalCommitAmount;\r\n        uint256 totalAmountCollected;\r\n    }\r\n\r\n    mapping(string => Question) private _questions; // Question ID => Question {}\r\n    mapping(address => User) public userInfo;\r\n    mapping(address => mapping(string => UserToQuestionId))\r\n        public userToQuestionId;\r\n    mapping(address => uint256) public userLastClaim; // Timestamp at which user claimed token last\r\n    /* Events */\r\n    event QuestionAdd(string questionId);\r\n    event ClaimTokens(address indexed user, uint256 amount);\r\n    event UnlockQuestion(\r\n        address indexed user,\r\n        string questionId,\r\n        uint256 commitAmount\r\n    );\r\n    event WinQuestion(\r\n        address indexed user,\r\n        string questionId,\r\n        uint256 rewardAmount\r\n    );\r\n\r\n    /* Modifiers */\r\n    modifier onlyValid(string calldata questionId) {\r\n        require(questionExist(questionId), \"Cryptopati: invalid question\");\r\n        _;\r\n    }\r\n\r\n    constructor(IAccuCoin _accuCoin, address _platform) Ownable() {\r\n        accuCoin = _accuCoin;\r\n        platform = _platform;\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used pause user functionalities of the contract\r\n     */\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used unpause user functionalities of the contract\r\n     */\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to address of accu coin\r\n     * @param _accuCoin Address of accu coin\r\n     */\r\n    function setAccuCoin(IAccuCoin _accuCoin) external onlyOwner {\r\n        accuCoin = _accuCoin;\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to set platform wallet address\r\n     * @param _platform Address of the platform wallet\r\n     */\r\n    function setPlatform(address _platform) external onlyOwner {\r\n        platform = _platform;\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to toggle initial token claim\r\n     */\r\n    function toggleIsInitialClaimable() external onlyOwner {\r\n        isInitialClaimable = !isInitialClaimable;\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to toggle token replenish claim\r\n     */\r\n    function toggleIsReplenishable() external onlyOwner {\r\n        isReplenishable = !isReplenishable;\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to set token claim settings\r\n     * @param _initialAmount Initial amount that can be claimed by an address\r\n     * @param _replenishAmount Amount of tokens that can be claimed when replenished\r\n     * @param _replenishDuration Duration in which token will replenish\r\n     */\r\n    function configureClaim(\r\n        uint256 _initialAmount,\r\n        uint256 _replenishAmount,\r\n        uint256 _replenishDuration\r\n    ) external onlyOwner {\r\n        initialAmount = _initialAmount;\r\n        replenishAmount = _replenishAmount;\r\n        replenishDuration = _replenishDuration;\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to claim tokens initially or when replenished\r\n     */\r\n    function claimTokens()\r\n        external\r\n        whenNotPaused\r\n        returns (uint256 claimAmount)\r\n    {\r\n        if (userLastClaim[msg.sender] != 0) {\r\n            require(isReplenishable, \"Cryptopati: token replenish is paused\");\r\n            require(\r\n                block.timestamp - userLastClaim[msg.sender] >=\r\n                    replenishDuration,\r\n                \"Cryptopati: wait replenish duration to claim more tokens\"\r\n            );\r\n            claimAmount = replenishAmount;\r\n        } else {\r\n            require(isInitialClaimable, \"Cryptopati: initial claim is paused\");\r\n            claimAmount = initialAmount;\r\n        }\r\n        userLastClaim[msg.sender] = block.timestamp;\r\n        accuCoin.mint(msg.sender, claimAmount);\r\n        emit ClaimTokens(msg.sender, claimAmount);\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to check if a question exist\r\n     * @param questionId ID of the question\r\n     */\r\n    function questionExist(\r\n        string calldata questionId\r\n    ) public view returns (bool) {\r\n        return _questions[questionId].exist;\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to get question details\r\n     * @param questionId ID of the question\r\n     */\r\n    function getQuestion(\r\n        string calldata questionId\r\n    ) external view onlyValid(questionId) returns (Question memory) {\r\n        return _questions[questionId];\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to get question details\r\n     * @param questionId ID of the question\r\n     */\r\n    function addQuestion(\r\n        string calldata questionId,\r\n        uint256 multiplier\r\n    ) external onlyOwner {\r\n        require(\r\n            !_questions[questionId].exist,\r\n            \"Cryptopati: questionId already added\"\r\n        );\r\n\r\n        _questions[questionId] = Question(multiplier, true);\r\n\r\n        emit QuestionAdd(questionId);\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to unlock the question\r\n     * @param questionId ID of the question\r\n     * @param commitAmount Amount user invests to unlock the question\r\n     */\r\n    function unlockQuestion(\r\n        string calldata questionId,\r\n        uint256 commitAmount\r\n    ) external whenNotPaused onlyValid(questionId) {\r\n        require(\r\n            userToQuestionId[msg.sender][questionId].unlockTimestamp == 0,\r\n            \"Cryptopati: Question already unlocked\"\r\n        );\r\n        require(commitAmount != 0, \"Cryptopati: Commit Amount Zero\");\r\n\r\n        userToQuestionId[msg.sender][questionId].commitAmount = commitAmount;\r\n        userToQuestionId[msg.sender][questionId].unlockTimestamp = block\r\n            .timestamp;\r\n\r\n        userInfo[msg.sender].totalCommitAmount += commitAmount;\r\n\r\n        accuCoin.transferFrom(msg.sender, address(this), commitAmount);\r\n\r\n        emit UnlockQuestion(msg.sender, questionId, commitAmount);\r\n    }\r\n\r\n    /**\r\n     * @notice This method is used to transfer reward if answer is correct\r\n     * @param questionId ID of the question\r\n     * @param _addressUser address of the user to sent reward\r\n     */\r\n    function winQuestion(\r\n        string calldata questionId,\r\n        address _addressUser\r\n    ) external onlyValid(questionId) {\r\n        require(msg.sender == platform, \"Cryptopati: only platform\");\r\n        require(\r\n            userToQuestionId[_addressUser][questionId].unlockTimestamp != 0,\r\n            \"Cryptopati: Question not unlocked\"\r\n        );\r\n        require(\r\n            !userToQuestionId[_addressUser][questionId].answered,\r\n            \"Cryptopati: Question already answered\"\r\n        );\r\n\r\n        userToQuestionId[_addressUser][questionId].answered = true;\r\n        uint256 userCommitAmount = userToQuestionId[_addressUser][questionId]\r\n            .commitAmount;\r\n        uint256 userCollectedAmount = userCommitAmount *\r\n            _questions[questionId].multiplier;\r\n        multiplierAmount = userCollectedAmount - userCommitAmount;\r\n        userToQuestionId[_addressUser][questionId]\r\n            .collectedAmount = userCollectedAmount;\r\n\r\n        userInfo[_addressUser].totalAmountCollected += userCollectedAmount;\r\n        accuCoin.mint(_addressUser, multiplierAmount);\r\n        accuCoin.transfer(_addressUser, userCommitAmount);\r\n        emit WinQuestion(_addressUser, questionId, userCollectedAmount);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Lenovo\\RnR\\Tokenopati\\contracts\\Cryptopati.sol",
  "ast": {
    "absolutePath": "project:/contracts/Cryptopati.sol",
    "exportedSymbols": {
      "Context": [
        1321
      ],
      "Cryptopati": [
        3107
      ],
      "IAccuCoin": [
        3153
      ],
      "IERC20": [
        1274
      ],
      "Ownable": [
        501
      ],
      "Pausable": [
        609
      ]
    },
    "id": 3108,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2553,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2554,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3108,
        "sourceUnit": 502,
        "src": "60:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 2555,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3108,
        "sourceUnit": 610,
        "src": "114:55:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2556,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3108,
        "sourceUnit": 1275,
        "src": "171:56:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/IAccuCoin.sol",
        "file": "./interfaces/IAccuCoin.sol",
        "id": 2557,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3108,
        "sourceUnit": 3154,
        "src": "229:36:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2558,
              "name": "Ownable",
              "nameLocations": [
                "292:7:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 501,
              "src": "292:7:13"
            },
            "id": 2559,
            "nodeType": "InheritanceSpecifier",
            "src": "292:7:13"
          },
          {
            "baseName": {
              "id": 2560,
              "name": "Pausable",
              "nameLocations": [
                "301:8:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 609,
              "src": "301:8:13"
            },
            "id": 2561,
            "nodeType": "InheritanceSpecifier",
            "src": "301:8:13"
          }
        ],
        "canonicalName": "Cryptopati",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3107,
        "linearizedBaseContracts": [
          3107,
          609,
          501,
          1321
        ],
        "name": "Cryptopati",
        "nameLocation": "278:10:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "12078167",
            "id": 2564,
            "mutability": "mutable",
            "name": "accuCoin",
            "nameLocation": "334:8:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "317:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAccuCoin_$3153",
              "typeString": "contract IAccuCoin"
            },
            "typeName": {
              "id": 2563,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2562,
                "name": "IAccuCoin",
                "nameLocations": [
                  "317:9:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3153,
                "src": "317:9:13"
              },
              "referencedDeclaration": 3153,
              "src": "317:9:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                "typeString": "contract IAccuCoin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4bde38c8",
            "id": 2566,
            "mutability": "mutable",
            "name": "platform",
            "nameLocation": "392:8:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "377:23:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2565,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "377:7:13",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc1ed437",
            "id": 2569,
            "mutability": "mutable",
            "name": "initialAmount",
            "nameLocation": "467:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "452:40:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2567,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 2568,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "483:9:13",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a0bf70c0",
            "id": 2572,
            "mutability": "mutable",
            "name": "isInitialClaimable",
            "nameLocation": "551:18:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "539:37:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2570,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "539:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 2571,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "572:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7ff99dbe",
            "id": 2575,
            "mutability": "mutable",
            "name": "replenishAmount",
            "nameLocation": "668:15:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "653:41:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2573,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "653:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 2574,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "686:8:13",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ba38754",
            "id": 2578,
            "mutability": "mutable",
            "name": "replenishDuration",
            "nameLocation": "763:17:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "748:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2576,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "748:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34",
              "id": 2577,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "783:7:13",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_14400_by_1",
                "typeString": "int_const 14400"
              },
              "value": "4"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "39626127",
            "id": 2581,
            "mutability": "mutable",
            "name": "isReplenishable",
            "nameLocation": "860:15:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "848:34:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2579,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "848:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 2580,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "878:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2583,
            "mutability": "mutable",
            "name": "multiplierAmount",
            "nameLocation": "976:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "960:32:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2582,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "960:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "canonicalName": "Cryptopati.Question",
            "id": 2588,
            "members": [
              {
                "constant": false,
                "id": 2585,
                "mutability": "mutable",
                "name": "multiplier",
                "nameLocation": "1096:10:13",
                "nodeType": "VariableDeclaration",
                "scope": 2588,
                "src": "1088:18:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2584,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1088:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2587,
                "mutability": "mutable",
                "name": "exist",
                "nameLocation": "1122:5:13",
                "nodeType": "VariableDeclaration",
                "scope": 2588,
                "src": "1117:10:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2586,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1117:4:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Question",
            "nameLocation": "1068:8:13",
            "nodeType": "StructDefinition",
            "scope": 3107,
            "src": "1061:74:13",
            "visibility": "public"
          },
          {
            "canonicalName": "Cryptopati.UserToQuestionId",
            "id": 2597,
            "members": [
              {
                "constant": false,
                "id": 2590,
                "mutability": "mutable",
                "name": "answered",
                "nameLocation": "1181:8:13",
                "nodeType": "VariableDeclaration",
                "scope": 2597,
                "src": "1176:13:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2589,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1176:4:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2592,
                "mutability": "mutable",
                "name": "unlockTimestamp",
                "nameLocation": "1208:15:13",
                "nodeType": "VariableDeclaration",
                "scope": 2597,
                "src": "1200:23:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2591,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1200:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2594,
                "mutability": "mutable",
                "name": "commitAmount",
                "nameLocation": "1242:12:13",
                "nodeType": "VariableDeclaration",
                "scope": 2597,
                "src": "1234:20:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2593,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1234:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2596,
                "mutability": "mutable",
                "name": "collectedAmount",
                "nameLocation": "1273:15:13",
                "nodeType": "VariableDeclaration",
                "scope": 2597,
                "src": "1265:23:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2595,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1265:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserToQuestionId",
            "nameLocation": "1148:16:13",
            "nodeType": "StructDefinition",
            "scope": 3107,
            "src": "1141:155:13",
            "visibility": "public"
          },
          {
            "canonicalName": "Cryptopati.User",
            "id": 2602,
            "members": [
              {
                "constant": false,
                "id": 2599,
                "mutability": "mutable",
                "name": "totalCommitAmount",
                "nameLocation": "1335:17:13",
                "nodeType": "VariableDeclaration",
                "scope": 2602,
                "src": "1327:25:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2598,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1327:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2601,
                "mutability": "mutable",
                "name": "totalAmountCollected",
                "nameLocation": "1371:20:13",
                "nodeType": "VariableDeclaration",
                "scope": 2602,
                "src": "1363:28:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2600,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1363:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "1311:4:13",
            "nodeType": "StructDefinition",
            "scope": 3107,
            "src": "1304:95:13",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2607,
            "mutability": "mutable",
            "name": "_questions",
            "nameLocation": "1443:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "1407:46:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Question_$2588_storage_$",
              "typeString": "mapping(string => struct Cryptopati.Question)"
            },
            "typeName": {
              "id": 2606,
              "keyType": {
                "id": 2603,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1415:6:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1407:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Question_$2588_storage_$",
                "typeString": "mapping(string => struct Cryptopati.Question)"
              },
              "valueType": {
                "id": 2605,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2604,
                  "name": "Question",
                  "nameLocations": [
                    "1425:8:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2588,
                  "src": "1425:8:13"
                },
                "referencedDeclaration": 2588,
                "src": "1425:8:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Question_$2588_storage_ptr",
                  "typeString": "struct Cryptopati.Question"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "1959a002",
            "id": 2612,
            "mutability": "mutable",
            "name": "userInfo",
            "nameLocation": "1522:8:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "1490:40:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$2602_storage_$",
              "typeString": "mapping(address => struct Cryptopati.User)"
            },
            "typeName": {
              "id": 2611,
              "keyType": {
                "id": 2608,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1498:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1490:24:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$2602_storage_$",
                "typeString": "mapping(address => struct Cryptopati.User)"
              },
              "valueType": {
                "id": 2610,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2609,
                  "name": "User",
                  "nameLocations": [
                    "1509:4:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2602,
                  "src": "1509:4:13"
                },
                "referencedDeclaration": 2602,
                "src": "1509:4:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$2602_storage_ptr",
                  "typeString": "struct Cryptopati.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fe99d1e4",
            "id": 2619,
            "mutability": "mutable",
            "name": "userToQuestionId",
            "nameLocation": "1609:16:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "1537:88:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$_$",
              "typeString": "mapping(address => mapping(string => struct Cryptopati.UserToQuestionId))"
            },
            "typeName": {
              "id": 2618,
              "keyType": {
                "id": 2613,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1545:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1537:55:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$_$",
                "typeString": "mapping(address => mapping(string => struct Cryptopati.UserToQuestionId))"
              },
              "valueType": {
                "id": 2617,
                "keyType": {
                  "id": 2614,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1564:6:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "1556:35:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$",
                  "typeString": "mapping(string => struct Cryptopati.UserToQuestionId)"
                },
                "valueType": {
                  "id": 2616,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2615,
                    "name": "UserToQuestionId",
                    "nameLocations": [
                      "1574:16:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2597,
                    "src": "1574:16:13"
                  },
                  "referencedDeclaration": 2597,
                  "src": "1574:16:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserToQuestionId_$2597_storage_ptr",
                    "typeString": "struct Cryptopati.UserToQuestionId"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "425a5177",
            "id": 2623,
            "mutability": "mutable",
            "name": "userLastClaim",
            "nameLocation": "1667:13:13",
            "nodeType": "VariableDeclaration",
            "scope": 3107,
            "src": "1632:48:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2622,
              "keyType": {
                "id": 2620,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1640:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1632:27:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2621,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1651:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "9bdf0f47340b5b4ece38eb89dee27899b2f0ca92def38e08dc80f7b76adf05c7",
            "id": 2627,
            "name": "QuestionAdd",
            "nameLocation": "1757:11:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2625,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "questionId",
                  "nameLocation": "1776:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2627,
                  "src": "1769:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2624,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1769:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1768:19:13"
            },
            "src": "1751:37:13"
          },
          {
            "anonymous": false,
            "eventSelector": "4d7f917f6b905f28ba5297e6c224a6cfec20ac6a3698a55b412d30b95ad25d2f",
            "id": 2633,
            "name": "ClaimTokens",
            "nameLocation": "1800:11:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2629,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1828:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2633,
                  "src": "1812:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1812:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2631,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1842:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2633,
                  "src": "1834:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1811:38:13"
            },
            "src": "1794:56:13"
          },
          {
            "anonymous": false,
            "eventSelector": "67da36e16a632f9aaad852491a734952a41b7884fa841f566862c81003adeb13",
            "id": 2641,
            "name": "UnlockQuestion",
            "nameLocation": "1862:14:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2635,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1903:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "1887:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1887:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2637,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "questionId",
                  "nameLocation": "1925:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "1918:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2636,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2639,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "commitAmount",
                  "nameLocation": "1954:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2641,
                  "src": "1946:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1876:97:13"
            },
            "src": "1856:118:13"
          },
          {
            "anonymous": false,
            "eventSelector": "121ac003552f99fa84985528b2fcf8156f08f6f0aa48e9c5245098682cee2ec8",
            "id": 2649,
            "name": "WinQuestion",
            "nameLocation": "1986:11:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2643,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2024:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2649,
                  "src": "2008:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2645,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "questionId",
                  "nameLocation": "2046:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2649,
                  "src": "2039:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2644,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2039:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2647,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "2075:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2649,
                  "src": "2067:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1997:97:13"
            },
            "src": "1980:115:13"
          },
          {
            "body": {
              "id": 2661,
              "nodeType": "Block",
              "src": "2171:97:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2655,
                            "name": "questionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2651,
                            "src": "2204:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 2654,
                          "name": "questionExist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2862,
                          "src": "2190:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_calldata_ptr_$returns$_t_bool_$",
                            "typeString": "function (string calldata) view returns (bool)"
                          }
                        },
                        "id": 2656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2190:25:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727970746f706174693a20696e76616c6964207175657374696f6e",
                        "id": 2657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2217:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34c804ff35e3623d736ae64ab25a36f20a12b8094fd0d63e0cf15359eb28f2b1",
                          "typeString": "literal_string \"Cryptopati: invalid question\""
                        },
                        "value": "Cryptopati: invalid question"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34c804ff35e3623d736ae64ab25a36f20a12b8094fd0d63e0cf15359eb28f2b1",
                          "typeString": "literal_string \"Cryptopati: invalid question\""
                        }
                      ],
                      "id": 2653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2182:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:66:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2659,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:66:13"
                },
                {
                  "id": 2660,
                  "nodeType": "PlaceholderStatement",
                  "src": "2259:1:13"
                }
              ]
            },
            "id": 2662,
            "name": "onlyValid",
            "nameLocation": "2133:9:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2651,
                  "mutability": "mutable",
                  "name": "questionId",
                  "nameLocation": "2159:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2662,
                  "src": "2143:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2650,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2142:28:13"
            },
            "src": "2124:144:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2680,
              "nodeType": "Block",
              "src": "2338:70:13",
              "statements": [
                {
                  "expression": {
                    "id": 2674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2672,
                      "name": "accuCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2564,
                      "src": "2349:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                        "typeString": "contract IAccuCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2673,
                      "name": "_accuCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2665,
                      "src": "2360:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                        "typeString": "contract IAccuCoin"
                      }
                    },
                    "src": "2349:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                      "typeString": "contract IAccuCoin"
                    }
                  },
                  "id": 2675,
                  "nodeType": "ExpressionStatement",
                  "src": "2349:20:13"
                },
                {
                  "expression": {
                    "id": 2678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2676,
                      "name": "platform",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2566,
                      "src": "2380:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2677,
                      "name": "_platform",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2667,
                      "src": "2391:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2380:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2679,
                  "nodeType": "ExpressionStatement",
                  "src": "2380:20:13"
                }
              ]
            },
            "id": 2681,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 2670,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2669,
                  "name": "Ownable",
                  "nameLocations": [
                    "2328:7:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 501,
                  "src": "2328:7:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2328:9:13"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2665,
                  "mutability": "mutable",
                  "name": "_accuCoin",
                  "nameLocation": "2298:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "2288:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                    "typeString": "contract IAccuCoin"
                  },
                  "typeName": {
                    "id": 2664,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2663,
                      "name": "IAccuCoin",
                      "nameLocations": [
                        "2288:9:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3153,
                      "src": "2288:9:13"
                    },
                    "referencedDeclaration": 3153,
                    "src": "2288:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                      "typeString": "contract IAccuCoin"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2667,
                  "mutability": "mutable",
                  "name": "_platform",
                  "nameLocation": "2317:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2681,
                  "src": "2309:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2287:40:13"
            },
            "returnParameters": {
              "id": 2671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2338:0:13"
            },
            "scope": 3107,
            "src": "2276:132:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2690,
              "nodeType": "Block",
              "src": "2549:27:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2687,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 592,
                      "src": "2560:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2560:8:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2689,
                  "nodeType": "ExpressionStatement",
                  "src": "2560:8:13"
                }
              ]
            },
            "documentation": {
              "id": 2682,
              "nodeType": "StructuredDocumentation",
              "src": "2416:91:13",
              "text": " @notice This method is used pause user functionalities of the contract"
            },
            "functionSelector": "8456cb59",
            "id": 2691,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2685,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2684,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2539:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "2539:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2539:9:13"
              }
            ],
            "name": "pause",
            "nameLocation": "2522:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2527:2:13"
            },
            "returnParameters": {
              "id": 2686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2549:0:13"
            },
            "scope": 3107,
            "src": "2513:63:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2700,
              "nodeType": "Block",
              "src": "2721:29:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2697,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 608,
                      "src": "2732:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2732:10:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2699,
                  "nodeType": "ExpressionStatement",
                  "src": "2732:10:13"
                }
              ]
            },
            "documentation": {
              "id": 2692,
              "nodeType": "StructuredDocumentation",
              "src": "2584:93:13",
              "text": " @notice This method is used unpause user functionalities of the contract"
            },
            "functionSelector": "3f4ba83a",
            "id": 2701,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2695,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2694,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2711:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "2711:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2711:9:13"
              }
            ],
            "name": "unpause",
            "nameLocation": "2692:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2699:2:13"
            },
            "returnParameters": {
              "id": 2696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2721:0:13"
            },
            "scope": 3107,
            "src": "2683:67:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2714,
              "nodeType": "Block",
              "src": "2943:39:13",
              "statements": [
                {
                  "expression": {
                    "id": 2712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2710,
                      "name": "accuCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2564,
                      "src": "2954:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                        "typeString": "contract IAccuCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2711,
                      "name": "_accuCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2705,
                      "src": "2965:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                        "typeString": "contract IAccuCoin"
                      }
                    },
                    "src": "2954:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                      "typeString": "contract IAccuCoin"
                    }
                  },
                  "id": 2713,
                  "nodeType": "ExpressionStatement",
                  "src": "2954:20:13"
                }
              ]
            },
            "documentation": {
              "id": 2702,
              "nodeType": "StructuredDocumentation",
              "src": "2758:118:13",
              "text": " @notice This method is used to address of accu coin\n @param _accuCoin Address of accu coin"
            },
            "functionSelector": "ef485596",
            "id": 2715,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2708,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2707,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2933:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "2933:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2933:9:13"
              }
            ],
            "name": "setAccuCoin",
            "nameLocation": "2891:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2705,
                  "mutability": "mutable",
                  "name": "_accuCoin",
                  "nameLocation": "2913:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2715,
                  "src": "2903:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                    "typeString": "contract IAccuCoin"
                  },
                  "typeName": {
                    "id": 2704,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2703,
                      "name": "IAccuCoin",
                      "nameLocations": [
                        "2903:9:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3153,
                      "src": "2903:9:13"
                    },
                    "referencedDeclaration": 3153,
                    "src": "2903:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                      "typeString": "contract IAccuCoin"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2902:21:13"
            },
            "returnParameters": {
              "id": 2709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2943:0:13"
            },
            "scope": 3107,
            "src": "2882:100:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2727,
              "nodeType": "Block",
              "src": "3190:39:13",
              "statements": [
                {
                  "expression": {
                    "id": 2725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2723,
                      "name": "platform",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2566,
                      "src": "3201:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2724,
                      "name": "_platform",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2718,
                      "src": "3212:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3201:20:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2726,
                  "nodeType": "ExpressionStatement",
                  "src": "3201:20:13"
                }
              ]
            },
            "documentation": {
              "id": 2716,
              "nodeType": "StructuredDocumentation",
              "src": "2990:135:13",
              "text": " @notice This method is used to set platform wallet address\n @param _platform Address of the platform wallet"
            },
            "functionSelector": "6945c5ea",
            "id": 2728,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2721,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2720,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3180:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "3180:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3180:9:13"
              }
            ],
            "name": "setPlatform",
            "nameLocation": "3140:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2718,
                  "mutability": "mutable",
                  "name": "_platform",
                  "nameLocation": "3160:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2728,
                  "src": "3152:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3152:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3151:19:13"
            },
            "returnParameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3190:0:13"
            },
            "scope": 3107,
            "src": "3131:98:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2739,
              "nodeType": "Block",
              "src": "3376:59:13",
              "statements": [
                {
                  "expression": {
                    "id": 2737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2734,
                      "name": "isInitialClaimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2572,
                      "src": "3387:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3408:19:13",
                      "subExpression": {
                        "id": 2735,
                        "name": "isInitialClaimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2572,
                        "src": "3409:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3387:40:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2738,
                  "nodeType": "ExpressionStatement",
                  "src": "3387:40:13"
                }
              ]
            },
            "documentation": {
              "id": 2729,
              "nodeType": "StructuredDocumentation",
              "src": "3237:78:13",
              "text": " @notice This method is used to toggle initial token claim"
            },
            "functionSelector": "bed9bb02",
            "id": 2740,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2732,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2731,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3366:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "3366:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3366:9:13"
              }
            ],
            "name": "toggleIsInitialClaimable",
            "nameLocation": "3330:24:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3354:2:13"
            },
            "returnParameters": {
              "id": 2733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3376:0:13"
            },
            "scope": 3107,
            "src": "3321:114:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2751,
              "nodeType": "Block",
              "src": "3581:53:13",
              "statements": [
                {
                  "expression": {
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2746,
                      "name": "isReplenishable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "3592:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3610:16:13",
                      "subExpression": {
                        "id": 2747,
                        "name": "isReplenishable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2581,
                        "src": "3611:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3592:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2750,
                  "nodeType": "ExpressionStatement",
                  "src": "3592:34:13"
                }
              ]
            },
            "documentation": {
              "id": 2741,
              "nodeType": "StructuredDocumentation",
              "src": "3443:80:13",
              "text": " @notice This method is used to toggle token replenish claim"
            },
            "functionSelector": "503a3ed8",
            "id": 2752,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2744,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2743,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3571:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "3571:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "3571:9:13"
              }
            ],
            "name": "toggleIsReplenishable",
            "nameLocation": "3538:21:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3559:2:13"
            },
            "returnParameters": {
              "id": 2745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3581:0:13"
            },
            "scope": 3107,
            "src": "3529:105:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2776,
              "nodeType": "Block",
              "src": "4117:143:13",
              "statements": [
                {
                  "expression": {
                    "id": 2766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2764,
                      "name": "initialAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2569,
                      "src": "4128:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2765,
                      "name": "_initialAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2755,
                      "src": "4144:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4128:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2767,
                  "nodeType": "ExpressionStatement",
                  "src": "4128:30:13"
                },
                {
                  "expression": {
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2768,
                      "name": "replenishAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2575,
                      "src": "4169:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2769,
                      "name": "_replenishAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2757,
                      "src": "4187:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4169:34:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2771,
                  "nodeType": "ExpressionStatement",
                  "src": "4169:34:13"
                },
                {
                  "expression": {
                    "id": 2774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2772,
                      "name": "replenishDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2578,
                      "src": "4214:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2773,
                      "name": "_replenishDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2759,
                      "src": "4234:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4214:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2775,
                  "nodeType": "ExpressionStatement",
                  "src": "4214:38:13"
                }
              ]
            },
            "documentation": {
              "id": 2753,
              "nodeType": "StructuredDocumentation",
              "src": "3642:314:13",
              "text": " @notice This method is used to set token claim settings\n @param _initialAmount Initial amount that can be claimed by an address\n @param _replenishAmount Amount of tokens that can be claimed when replenished\n @param _replenishDuration Duration in which token will replenish"
            },
            "functionSelector": "6ccbe81b",
            "id": 2777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2762,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2761,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4107:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "4107:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "4107:9:13"
              }
            ],
            "name": "configureClaim",
            "nameLocation": "3971:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2755,
                  "mutability": "mutable",
                  "name": "_initialAmount",
                  "nameLocation": "4004:14:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2777,
                  "src": "3996:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3996:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2757,
                  "mutability": "mutable",
                  "name": "_replenishAmount",
                  "nameLocation": "4037:16:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2777,
                  "src": "4029:24:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4029:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2759,
                  "mutability": "mutable",
                  "name": "_replenishDuration",
                  "nameLocation": "4072:18:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2777,
                  "src": "4064:26:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4064:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3985:112:13"
            },
            "returnParameters": {
              "id": 2763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4117:0:13"
            },
            "scope": 3107,
            "src": "3962:298:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2847,
              "nodeType": "Block",
              "src": "4476:704:13",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2785,
                        "name": "userLastClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2623,
                        "src": "4491:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2788,
                      "indexExpression": {
                        "expression": {
                          "id": 2786,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4505:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4509:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4505:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4491:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4520:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4491:30:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2823,
                    "nodeType": "Block",
                    "src": "4883:135:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2815,
                              "name": "isInitialClaimable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2572,
                              "src": "4906:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43727970746f706174693a20696e697469616c20636c61696d20697320706175736564",
                              "id": 2816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4926:37:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8bcbdfad5625997364b74d9274b36c5337faaa23996805da6a6c7d6256e8312c",
                                "typeString": "literal_string \"Cryptopati: initial claim is paused\""
                              },
                              "value": "Cryptopati: initial claim is paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8bcbdfad5625997364b74d9274b36c5337faaa23996805da6a6c7d6256e8312c",
                                "typeString": "literal_string \"Cryptopati: initial claim is paused\""
                              }
                            ],
                            "id": 2814,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4898:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4898:66:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2818,
                        "nodeType": "ExpressionStatement",
                        "src": "4898:66:13"
                      },
                      {
                        "expression": {
                          "id": 2821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2819,
                            "name": "claimAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2783,
                            "src": "4979:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2820,
                            "name": "initialAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2569,
                            "src": "4993:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4979:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2822,
                        "nodeType": "ExpressionStatement",
                        "src": "4979:27:13"
                      }
                    ]
                  },
                  "id": 2824,
                  "nodeType": "IfStatement",
                  "src": "4487:531:13",
                  "trueBody": {
                    "id": 2813,
                    "nodeType": "Block",
                    "src": "4523:354:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2792,
                              "name": "isReplenishable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2581,
                              "src": "4546:15:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43727970746f706174693a20746f6b656e207265706c656e69736820697320706175736564",
                              "id": 2793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4563:39:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_775ed42ea860ca40cb0796de2bae048759a5343777962c82b49fe42afcdb3356",
                                "typeString": "literal_string \"Cryptopati: token replenish is paused\""
                              },
                              "value": "Cryptopati: token replenish is paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_775ed42ea860ca40cb0796de2bae048759a5343777962c82b49fe42afcdb3356",
                                "typeString": "literal_string \"Cryptopati: token replenish is paused\""
                              }
                            ],
                            "id": 2791,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4538:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4538:65:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2795,
                        "nodeType": "ExpressionStatement",
                        "src": "4538:65:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2797,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "4644:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4650:9:13",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4644:15:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 2799,
                                    "name": "userLastClaim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2623,
                                    "src": "4662:13:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2802,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2800,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "4676:3:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4680:6:13",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "4676:10:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4662:25:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4644:43:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2804,
                                "name": "replenishDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2578,
                                "src": "4712:17:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4644:85:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43727970746f706174693a2077616974207265706c656e697368206475726174696f6e20746f20636c61696d206d6f726520746f6b656e73",
                              "id": 2806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4748:58:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_690a0f082da6cd056dd3968faf72244a4ada10374dc6eaf91449c93b6615446d",
                                "typeString": "literal_string \"Cryptopati: wait replenish duration to claim more tokens\""
                              },
                              "value": "Cryptopati: wait replenish duration to claim more tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_690a0f082da6cd056dd3968faf72244a4ada10374dc6eaf91449c93b6615446d",
                                "typeString": "literal_string \"Cryptopati: wait replenish duration to claim more tokens\""
                              }
                            ],
                            "id": 2796,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4618:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4618:203:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2808,
                        "nodeType": "ExpressionStatement",
                        "src": "4618:203:13"
                      },
                      {
                        "expression": {
                          "id": 2811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2809,
                            "name": "claimAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2783,
                            "src": "4836:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2810,
                            "name": "replenishAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2575,
                            "src": "4850:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4836:29:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2812,
                        "nodeType": "ExpressionStatement",
                        "src": "4836:29:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2825,
                        "name": "userLastClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2623,
                        "src": "5028:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2828,
                      "indexExpression": {
                        "expression": {
                          "id": 2826,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5042:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5046:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5042:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5028:25:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2829,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5056:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5062:9:13",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5056:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5028:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2832,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:43:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2836,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5096:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5100:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5096:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2838,
                        "name": "claimAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2783,
                        "src": "5108:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2833,
                        "name": "accuCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "5082:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                          "typeString": "contract IAccuCoin"
                        }
                      },
                      "id": 2835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5091:4:13",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3152,
                      "src": "5082:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5082:38:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2840,
                  "nodeType": "ExpressionStatement",
                  "src": "5082:38:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2842,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5148:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5152:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5148:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2844,
                        "name": "claimAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2783,
                        "src": "5160:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2841,
                      "name": "ClaimTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2633,
                      "src": "5136:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5136:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2846,
                  "nodeType": "EmitStatement",
                  "src": "5131:41:13"
                }
              ]
            },
            "documentation": {
              "id": 2778,
              "nodeType": "StructuredDocumentation",
              "src": "4268:94:13",
              "text": " @notice This method is used to claim tokens initially or when replenished"
            },
            "functionSelector": "48c54b9d",
            "id": 2848,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2781,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2780,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "4418:13:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 536,
                  "src": "4418:13:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "4418:13:13"
              }
            ],
            "name": "claimTokens",
            "nameLocation": "4377:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4388:2:13"
            },
            "returnParameters": {
              "id": 2784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2783,
                  "mutability": "mutable",
                  "name": "claimAmount",
                  "nameLocation": "4458:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "4450:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4450:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4449:21:13"
            },
            "scope": 3107,
            "src": "4368:812:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2861,
              "nodeType": "Block",
              "src": "5410:54:13",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 2856,
                        "name": "_questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2607,
                        "src": "5428:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Question_$2588_storage_$",
                          "typeString": "mapping(string memory => struct Cryptopati.Question storage ref)"
                        }
                      },
                      "id": 2858,
                      "indexExpression": {
                        "id": 2857,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2851,
                        "src": "5439:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5428:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$2588_storage",
                        "typeString": "struct Cryptopati.Question storage ref"
                      }
                    },
                    "id": 2859,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5451:5:13",
                    "memberName": "exist",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2587,
                    "src": "5428:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2855,
                  "id": 2860,
                  "nodeType": "Return",
                  "src": "5421:35:13"
                }
              ]
            },
            "documentation": {
              "id": 2849,
              "nodeType": "StructuredDocumentation",
              "src": "5188:122:13",
              "text": " @notice This method is used to check if a question exist\n @param questionId ID of the question"
            },
            "functionSelector": "32217e94",
            "id": 2862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "questionExist",
            "nameLocation": "5325:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "questionId",
                  "nameLocation": "5365:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2862,
                  "src": "5349:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5349:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5338:44:13"
            },
            "returnParameters": {
              "id": 2855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2862,
                  "src": "5404:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2853,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5404:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5403:6:13"
            },
            "scope": 3107,
            "src": "5316:148:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2878,
              "nodeType": "Block",
              "src": "5722:48:13",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2874,
                      "name": "_questions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2607,
                      "src": "5740:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Question_$2588_storage_$",
                        "typeString": "mapping(string memory => struct Cryptopati.Question storage ref)"
                      }
                    },
                    "id": 2876,
                    "indexExpression": {
                      "id": 2875,
                      "name": "questionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2865,
                      "src": "5751:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5740:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$2588_storage",
                      "typeString": "struct Cryptopati.Question storage ref"
                    }
                  },
                  "functionReturnParameters": 2873,
                  "id": 2877,
                  "nodeType": "Return",
                  "src": "5733:29:13"
                }
              ]
            },
            "documentation": {
              "id": 2863,
              "nodeType": "StructuredDocumentation",
              "src": "5472:117:13",
              "text": " @notice This method is used to get question details\n @param questionId ID of the question"
            },
            "functionSelector": "ccb1c0a1",
            "id": 2879,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2868,
                    "name": "questionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2865,
                    "src": "5684:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 2869,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2867,
                  "name": "onlyValid",
                  "nameLocations": [
                    "5674:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2662,
                  "src": "5674:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "5674:21:13"
              }
            ],
            "name": "getQuestion",
            "nameLocation": "5604:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2865,
                  "mutability": "mutable",
                  "name": "questionId",
                  "nameLocation": "5642:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2879,
                  "src": "5626:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2864,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5626:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5615:44:13"
            },
            "returnParameters": {
              "id": 2873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2872,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2879,
                  "src": "5705:15:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Question_$2588_memory_ptr",
                    "typeString": "struct Cryptopati.Question"
                  },
                  "typeName": {
                    "id": 2871,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2870,
                      "name": "Question",
                      "nameLocations": [
                        "5705:8:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2588,
                      "src": "5705:8:13"
                    },
                    "referencedDeclaration": 2588,
                    "src": "5705:8:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$2588_storage_ptr",
                      "typeString": "struct Cryptopati.Question"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5704:17:13"
            },
            "scope": 3107,
            "src": "5595:175:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2911,
              "nodeType": "Block",
              "src": "6014:239:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6047:29:13",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2890,
                              "name": "_questions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2607,
                              "src": "6048:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Question_$2588_storage_$",
                                "typeString": "mapping(string memory => struct Cryptopati.Question storage ref)"
                              }
                            },
                            "id": 2892,
                            "indexExpression": {
                              "id": 2891,
                              "name": "questionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2882,
                              "src": "6059:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6048:22:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Question_$2588_storage",
                              "typeString": "struct Cryptopati.Question storage ref"
                            }
                          },
                          "id": 2893,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6071:5:13",
                          "memberName": "exist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2587,
                          "src": "6048:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727970746f706174693a207175657374696f6e496420616c7265616479206164646564",
                        "id": 2895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6091:38:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7af215c39ddb10181b9ec13b72df8d0f32b65862fdd45b7a783013dede2ee0d",
                          "typeString": "literal_string \"Cryptopati: questionId already added\""
                        },
                        "value": "Cryptopati: questionId already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7af215c39ddb10181b9ec13b72df8d0f32b65862fdd45b7a783013dede2ee0d",
                          "typeString": "literal_string \"Cryptopati: questionId already added\""
                        }
                      ],
                      "id": 2889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6025:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6025:115:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2897,
                  "nodeType": "ExpressionStatement",
                  "src": "6025:115:13"
                },
                {
                  "expression": {
                    "id": 2905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2898,
                        "name": "_questions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2607,
                        "src": "6153:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Question_$2588_storage_$",
                          "typeString": "mapping(string memory => struct Cryptopati.Question storage ref)"
                        }
                      },
                      "id": 2900,
                      "indexExpression": {
                        "id": 2899,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "6164:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6153:22:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$2588_storage",
                        "typeString": "struct Cryptopati.Question storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2902,
                          "name": "multiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2884,
                          "src": "6187:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 2903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6199:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 2901,
                        "name": "Question",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2588,
                        "src": "6178:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Question_$2588_storage_ptr_$",
                          "typeString": "type(struct Cryptopati.Question storage pointer)"
                        }
                      },
                      "id": 2904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6178:26:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Question_$2588_memory_ptr",
                        "typeString": "struct Cryptopati.Question memory"
                      }
                    },
                    "src": "6153:51:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Question_$2588_storage",
                      "typeString": "struct Cryptopati.Question storage ref"
                    }
                  },
                  "id": 2906,
                  "nodeType": "ExpressionStatement",
                  "src": "6153:51:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2908,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2882,
                        "src": "6234:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 2907,
                      "name": "QuestionAdd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2627,
                      "src": "6222:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 2909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6222:23:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2910,
                  "nodeType": "EmitStatement",
                  "src": "6217:28:13"
                }
              ]
            },
            "documentation": {
              "id": 2880,
              "nodeType": "StructuredDocumentation",
              "src": "5778:117:13",
              "text": " @notice This method is used to get question details\n @param questionId ID of the question"
            },
            "functionSelector": "129cd33e",
            "id": 2912,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2887,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2886,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6004:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 420,
                  "src": "6004:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6004:9:13"
              }
            ],
            "name": "addQuestion",
            "nameLocation": "5910:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2882,
                  "mutability": "mutable",
                  "name": "questionId",
                  "nameLocation": "5948:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2912,
                  "src": "5932:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2881,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5932:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2884,
                  "mutability": "mutable",
                  "name": "multiplier",
                  "nameLocation": "5977:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2912,
                  "src": "5969:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5969:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5921:73:13"
            },
            "returnParameters": {
              "id": 2888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6014:0:13"
            },
            "scope": 3107,
            "src": "5901:352:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2993,
              "nodeType": "Block",
              "src": "6598:630:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2926,
                                "name": "userToQuestionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2619,
                                "src": "6631:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$_$",
                                  "typeString": "mapping(address => mapping(string memory => struct Cryptopati.UserToQuestionId storage ref))"
                                }
                              },
                              "id": 2929,
                              "indexExpression": {
                                "expression": {
                                  "id": 2927,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "6648:3:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6652:6:13",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6648:10:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6631:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$",
                                "typeString": "mapping(string memory => struct Cryptopati.UserToQuestionId storage ref)"
                              }
                            },
                            "id": 2931,
                            "indexExpression": {
                              "id": 2930,
                              "name": "questionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2915,
                              "src": "6660:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6631:40:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserToQuestionId_$2597_storage",
                              "typeString": "struct Cryptopati.UserToQuestionId storage ref"
                            }
                          },
                          "id": 2932,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6672:15:13",
                          "memberName": "unlockTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2592,
                          "src": "6631:56:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6691:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6631:61:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727970746f706174693a205175657374696f6e20616c726561647920756e6c6f636b6564",
                        "id": 2935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6707:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d36f5a91d3fce31b1d6416a6b22b954d27d02cd526f1c2113a8cce8f0333ea91",
                          "typeString": "literal_string \"Cryptopati: Question already unlocked\""
                        },
                        "value": "Cryptopati: Question already unlocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d36f5a91d3fce31b1d6416a6b22b954d27d02cd526f1c2113a8cce8f0333ea91",
                          "typeString": "literal_string \"Cryptopati: Question already unlocked\""
                        }
                      ],
                      "id": 2925,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6609:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6609:148:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2937,
                  "nodeType": "ExpressionStatement",
                  "src": "6609:148:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2939,
                          "name": "commitAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2917,
                          "src": "6776:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6792:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6776:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727970746f706174693a20436f6d6d697420416d6f756e74205a65726f",
                        "id": 2942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6795:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e43ae9a994913c784b3df08f19e4163cccb5465942ed24bb396215a463a49fc",
                          "typeString": "literal_string \"Cryptopati: Commit Amount Zero\""
                        },
                        "value": "Cryptopati: Commit Amount Zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e43ae9a994913c784b3df08f19e4163cccb5465942ed24bb396215a463a49fc",
                          "typeString": "literal_string \"Cryptopati: Commit Amount Zero\""
                        }
                      ],
                      "id": 2938,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6768:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6768:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2944,
                  "nodeType": "ExpressionStatement",
                  "src": "6768:60:13"
                },
                {
                  "expression": {
                    "id": 2953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2945,
                            "name": "userToQuestionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2619,
                            "src": "6841:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$_$",
                              "typeString": "mapping(address => mapping(string memory => struct Cryptopati.UserToQuestionId storage ref))"
                            }
                          },
                          "id": 2949,
                          "indexExpression": {
                            "expression": {
                              "id": 2946,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6858:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6862:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6858:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6841:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$",
                            "typeString": "mapping(string memory => struct Cryptopati.UserToQuestionId storage ref)"
                          }
                        },
                        "id": 2950,
                        "indexExpression": {
                          "id": 2948,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2915,
                          "src": "6870:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6841:40:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserToQuestionId_$2597_storage",
                          "typeString": "struct Cryptopati.UserToQuestionId storage ref"
                        }
                      },
                      "id": 2951,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6882:12:13",
                      "memberName": "commitAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2594,
                      "src": "6841:53:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2952,
                      "name": "commitAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2917,
                      "src": "6897:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6841:68:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2954,
                  "nodeType": "ExpressionStatement",
                  "src": "6841:68:13"
                },
                {
                  "expression": {
                    "id": 2964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2955,
                            "name": "userToQuestionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2619,
                            "src": "6920:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$_$",
                              "typeString": "mapping(address => mapping(string memory => struct Cryptopati.UserToQuestionId storage ref))"
                            }
                          },
                          "id": 2959,
                          "indexExpression": {
                            "expression": {
                              "id": 2956,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6937:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6941:6:13",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6937:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6920:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$",
                            "typeString": "mapping(string memory => struct Cryptopati.UserToQuestionId storage ref)"
                          }
                        },
                        "id": 2960,
                        "indexExpression": {
                          "id": 2958,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2915,
                          "src": "6949:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6920:40:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserToQuestionId_$2597_storage",
                          "typeString": "struct Cryptopati.UserToQuestionId storage ref"
                        }
                      },
                      "id": 2961,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6961:15:13",
                      "memberName": "unlockTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2592,
                      "src": "6920:56:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2962,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "6979:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6999:9:13",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6979:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6920:88:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2965,
                  "nodeType": "ExpressionStatement",
                  "src": "6920:88:13"
                },
                {
                  "expression": {
                    "id": 2972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2966,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2612,
                          "src": "7021:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$2602_storage_$",
                            "typeString": "mapping(address => struct Cryptopati.User storage ref)"
                          }
                        },
                        "id": 2969,
                        "indexExpression": {
                          "expression": {
                            "id": 2967,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7030:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7034:6:13",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7030:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7021:20:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$2602_storage",
                          "typeString": "struct Cryptopati.User storage ref"
                        }
                      },
                      "id": 2970,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7042:17:13",
                      "memberName": "totalCommitAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2599,
                      "src": "7021:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 2971,
                      "name": "commitAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2917,
                      "src": "7063:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7021:54:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2973,
                  "nodeType": "ExpressionStatement",
                  "src": "7021:54:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2977,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7110:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7114:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7110:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2981,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7130:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Cryptopati_$3107",
                              "typeString": "contract Cryptopati"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Cryptopati_$3107",
                              "typeString": "contract Cryptopati"
                            }
                          ],
                          "id": 2980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7122:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2979,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7122:7:13",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7122:13:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2983,
                        "name": "commitAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2917,
                        "src": "7137:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2974,
                        "name": "accuCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "7088:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                          "typeString": "contract IAccuCoin"
                        }
                      },
                      "id": 2976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7097:12:13",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1273,
                      "src": "7088:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7088:62:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2985,
                  "nodeType": "ExpressionStatement",
                  "src": "7088:62:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2987,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7183:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7187:6:13",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7183:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2989,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2915,
                        "src": "7195:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 2990,
                        "name": "commitAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2917,
                        "src": "7207:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2986,
                      "name": "UnlockQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2641,
                      "src": "7168:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 2991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7168:52:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2992,
                  "nodeType": "EmitStatement",
                  "src": "7163:57:13"
                }
              ]
            },
            "documentation": {
              "id": 2913,
              "nodeType": "StructuredDocumentation",
              "src": "6261:187:13",
              "text": " @notice This method is used to unlock the question\n @param questionId ID of the question\n @param commitAmount Amount user invests to unlock the question"
            },
            "functionSelector": "55e9deca",
            "id": 2994,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2920,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2919,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "6562:13:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 536,
                  "src": "6562:13:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6562:13:13"
              },
              {
                "arguments": [
                  {
                    "id": 2922,
                    "name": "questionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2915,
                    "src": "6586:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 2923,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2921,
                  "name": "onlyValid",
                  "nameLocations": [
                    "6576:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2662,
                  "src": "6576:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "6576:21:13"
              }
            ],
            "name": "unlockQuestion",
            "nameLocation": "6463:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2915,
                  "mutability": "mutable",
                  "name": "questionId",
                  "nameLocation": "6504:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2994,
                  "src": "6488:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2914,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6488:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2917,
                  "mutability": "mutable",
                  "name": "commitAmount",
                  "nameLocation": "6533:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2994,
                  "src": "6525:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6525:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6477:75:13"
            },
            "returnParameters": {
              "id": 2924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6598:0:13"
            },
            "scope": 3107,
            "src": "6454:774:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3105,
              "nodeType": "Block",
              "src": "7565:1112:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3006,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7584:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7588:6:13",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7584:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3008,
                          "name": "platform",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2566,
                          "src": "7598:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7584:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727970746f706174693a206f6e6c7920706c6174666f726d",
                        "id": 3010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7608:27:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_061dd55b66bdb2cfd2bc5f2f4635aeea50de2307167efdc3a1b9984caa8dc03e",
                          "typeString": "literal_string \"Cryptopati: only platform\""
                        },
                        "value": "Cryptopati: only platform"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_061dd55b66bdb2cfd2bc5f2f4635aeea50de2307167efdc3a1b9984caa8dc03e",
                          "typeString": "literal_string \"Cryptopati: only platform\""
                        }
                      ],
                      "id": 3005,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7576:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7576:60:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3012,
                  "nodeType": "ExpressionStatement",
                  "src": "7576:60:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3014,
                                "name": "userToQuestionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2619,
                                "src": "7669:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$_$",
                                  "typeString": "mapping(address => mapping(string memory => struct Cryptopati.UserToQuestionId storage ref))"
                                }
                              },
                              "id": 3016,
                              "indexExpression": {
                                "id": 3015,
                                "name": "_addressUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2999,
                                "src": "7686:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7669:30:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$",
                                "typeString": "mapping(string memory => struct Cryptopati.UserToQuestionId storage ref)"
                              }
                            },
                            "id": 3018,
                            "indexExpression": {
                              "id": 3017,
                              "name": "questionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2997,
                              "src": "7700:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7669:42:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserToQuestionId_$2597_storage",
                              "typeString": "struct Cryptopati.UserToQuestionId storage ref"
                            }
                          },
                          "id": 3019,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7712:15:13",
                          "memberName": "unlockTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2592,
                          "src": "7669:58:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7731:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7669:63:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727970746f706174693a205175657374696f6e206e6f7420756e6c6f636b6564",
                        "id": 3022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7747:35:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c59cc889c7fda88f4e08c0d4ff282ddeec4960a47ab47055e7e68b883a193afb",
                          "typeString": "literal_string \"Cryptopati: Question not unlocked\""
                        },
                        "value": "Cryptopati: Question not unlocked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c59cc889c7fda88f4e08c0d4ff282ddeec4960a47ab47055e7e68b883a193afb",
                          "typeString": "literal_string \"Cryptopati: Question not unlocked\""
                        }
                      ],
                      "id": 3013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7647:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7647:146:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3024,
                  "nodeType": "ExpressionStatement",
                  "src": "7647:146:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7826:52:13",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 3026,
                                "name": "userToQuestionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2619,
                                "src": "7827:16:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$_$",
                                  "typeString": "mapping(address => mapping(string memory => struct Cryptopati.UserToQuestionId storage ref))"
                                }
                              },
                              "id": 3028,
                              "indexExpression": {
                                "id": 3027,
                                "name": "_addressUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2999,
                                "src": "7844:12:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7827:30:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$",
                                "typeString": "mapping(string memory => struct Cryptopati.UserToQuestionId storage ref)"
                              }
                            },
                            "id": 3030,
                            "indexExpression": {
                              "id": 3029,
                              "name": "questionId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2997,
                              "src": "7858:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7827:42:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserToQuestionId_$2597_storage",
                              "typeString": "struct Cryptopati.UserToQuestionId storage ref"
                            }
                          },
                          "id": 3031,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7870:8:13",
                          "memberName": "answered",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2590,
                          "src": "7827:51:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43727970746f706174693a205175657374696f6e20616c726561647920616e737765726564",
                        "id": 3033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7893:39:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdd664fd06fb3446f04bae85a3a95fde8b41ce6dff0836880efa3f942b48b967",
                          "typeString": "literal_string \"Cryptopati: Question already answered\""
                        },
                        "value": "Cryptopati: Question already answered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdd664fd06fb3446f04bae85a3a95fde8b41ce6dff0836880efa3f942b48b967",
                          "typeString": "literal_string \"Cryptopati: Question already answered\""
                        }
                      ],
                      "id": 3025,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7804:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7804:139:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3035,
                  "nodeType": "ExpressionStatement",
                  "src": "7804:139:13"
                },
                {
                  "expression": {
                    "id": 3043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 3036,
                            "name": "userToQuestionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2619,
                            "src": "7956:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$_$",
                              "typeString": "mapping(address => mapping(string memory => struct Cryptopati.UserToQuestionId storage ref))"
                            }
                          },
                          "id": 3039,
                          "indexExpression": {
                            "id": 3037,
                            "name": "_addressUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2999,
                            "src": "7973:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7956:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$",
                            "typeString": "mapping(string memory => struct Cryptopati.UserToQuestionId storage ref)"
                          }
                        },
                        "id": 3040,
                        "indexExpression": {
                          "id": 3038,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2997,
                          "src": "7987:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7956:42:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserToQuestionId_$2597_storage",
                          "typeString": "struct Cryptopati.UserToQuestionId storage ref"
                        }
                      },
                      "id": 3041,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7999:8:13",
                      "memberName": "answered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2590,
                      "src": "7956:51:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8010:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7956:58:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3044,
                  "nodeType": "ExpressionStatement",
                  "src": "7956:58:13"
                },
                {
                  "assignments": [
                    3046
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3046,
                      "mutability": "mutable",
                      "name": "userCommitAmount",
                      "nameLocation": "8033:16:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3105,
                      "src": "8025:24:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3045,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8025:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3053,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3047,
                          "name": "userToQuestionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2619,
                          "src": "8052:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$_$",
                            "typeString": "mapping(address => mapping(string memory => struct Cryptopati.UserToQuestionId storage ref))"
                          }
                        },
                        "id": 3049,
                        "indexExpression": {
                          "id": 3048,
                          "name": "_addressUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2999,
                          "src": "8069:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8052:30:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$",
                          "typeString": "mapping(string memory => struct Cryptopati.UserToQuestionId storage ref)"
                        }
                      },
                      "id": 3051,
                      "indexExpression": {
                        "id": 3050,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "8083:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8052:42:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserToQuestionId_$2597_storage",
                        "typeString": "struct Cryptopati.UserToQuestionId storage ref"
                      }
                    },
                    "id": 3052,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8109:12:13",
                    "memberName": "commitAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2594,
                    "src": "8052:69:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8025:96:13"
                },
                {
                  "assignments": [
                    3055
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3055,
                      "mutability": "mutable",
                      "name": "userCollectedAmount",
                      "nameLocation": "8140:19:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3105,
                      "src": "8132:27:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3054,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8132:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3062,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3056,
                      "name": "userCommitAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3046,
                      "src": "8162:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 3057,
                          "name": "_questions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2607,
                          "src": "8194:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Question_$2588_storage_$",
                            "typeString": "mapping(string memory => struct Cryptopati.Question storage ref)"
                          }
                        },
                        "id": 3059,
                        "indexExpression": {
                          "id": 3058,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2997,
                          "src": "8205:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8194:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Question_$2588_storage",
                          "typeString": "struct Cryptopati.Question storage ref"
                        }
                      },
                      "id": 3060,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8217:10:13",
                      "memberName": "multiplier",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2585,
                      "src": "8194:33:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8162:65:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8132:95:13"
                },
                {
                  "expression": {
                    "id": 3067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3063,
                      "name": "multiplierAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2583,
                      "src": "8238:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3064,
                        "name": "userCollectedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3055,
                        "src": "8257:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 3065,
                        "name": "userCommitAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3046,
                        "src": "8279:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8257:38:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8238:57:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3068,
                  "nodeType": "ExpressionStatement",
                  "src": "8238:57:13"
                },
                {
                  "expression": {
                    "id": 3076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 3069,
                            "name": "userToQuestionId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2619,
                            "src": "8306:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$_$",
                              "typeString": "mapping(address => mapping(string memory => struct Cryptopati.UserToQuestionId storage ref))"
                            }
                          },
                          "id": 3072,
                          "indexExpression": {
                            "id": 3070,
                            "name": "_addressUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2999,
                            "src": "8323:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8306:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_UserToQuestionId_$2597_storage_$",
                            "typeString": "mapping(string memory => struct Cryptopati.UserToQuestionId storage ref)"
                          }
                        },
                        "id": 3073,
                        "indexExpression": {
                          "id": 3071,
                          "name": "questionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2997,
                          "src": "8337:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8306:42:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserToQuestionId_$2597_storage",
                          "typeString": "struct Cryptopati.UserToQuestionId storage ref"
                        }
                      },
                      "id": 3074,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8363:15:13",
                      "memberName": "collectedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2596,
                      "src": "8306:72:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3075,
                      "name": "userCollectedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3055,
                      "src": "8381:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8306:94:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3077,
                  "nodeType": "ExpressionStatement",
                  "src": "8306:94:13"
                },
                {
                  "expression": {
                    "id": 3083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3078,
                          "name": "userInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2612,
                          "src": "8413:8:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$2602_storage_$",
                            "typeString": "mapping(address => struct Cryptopati.User storage ref)"
                          }
                        },
                        "id": 3080,
                        "indexExpression": {
                          "id": 3079,
                          "name": "_addressUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2999,
                          "src": "8422:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8413:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$2602_storage",
                          "typeString": "struct Cryptopati.User storage ref"
                        }
                      },
                      "id": 3081,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8436:20:13",
                      "memberName": "totalAmountCollected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2601,
                      "src": "8413:43:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 3082,
                      "name": "userCollectedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3055,
                      "src": "8460:19:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8413:66:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3084,
                  "nodeType": "ExpressionStatement",
                  "src": "8413:66:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3088,
                        "name": "_addressUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2999,
                        "src": "8504:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3089,
                        "name": "multiplierAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2583,
                        "src": "8518:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3085,
                        "name": "accuCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "8490:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                          "typeString": "contract IAccuCoin"
                        }
                      },
                      "id": 3087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8499:4:13",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3152,
                      "src": "8490:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8490:45:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3091,
                  "nodeType": "ExpressionStatement",
                  "src": "8490:45:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3095,
                        "name": "_addressUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2999,
                        "src": "8564:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3096,
                        "name": "userCommitAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3046,
                        "src": "8578:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3092,
                        "name": "accuCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "8546:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccuCoin_$3153",
                          "typeString": "contract IAccuCoin"
                        }
                      },
                      "id": 3094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8555:8:13",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1241,
                      "src": "8546:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8546:49:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3098,
                  "nodeType": "ExpressionStatement",
                  "src": "8546:49:13"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3100,
                        "name": "_addressUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2999,
                        "src": "8623:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3101,
                        "name": "questionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2997,
                        "src": "8637:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3102,
                        "name": "userCollectedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3055,
                        "src": "8649:19:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3099,
                      "name": "WinQuestion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2649,
                      "src": "8611:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 3103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8611:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3104,
                  "nodeType": "EmitStatement",
                  "src": "8606:63:13"
                }
              ]
            },
            "documentation": {
              "id": 2995,
              "nodeType": "StructuredDocumentation",
              "src": "7236:196:13",
              "text": " @notice This method is used to transfer reward if answer is correct\n @param questionId ID of the question\n @param _addressUser address of the user to sent reward"
            },
            "functionSelector": "cecf329c",
            "id": 3106,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3002,
                    "name": "questionId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2997,
                    "src": "7553:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_calldata_ptr",
                      "typeString": "string calldata"
                    }
                  }
                ],
                "id": 3003,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3001,
                  "name": "onlyValid",
                  "nameLocations": [
                    "7543:9:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2662,
                  "src": "7543:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "7543:21:13"
              }
            ],
            "name": "winQuestion",
            "nameLocation": "7447:11:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2997,
                  "mutability": "mutable",
                  "name": "questionId",
                  "nameLocation": "7485:10:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "7469:26:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2996,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7469:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2999,
                  "mutability": "mutable",
                  "name": "_addressUser",
                  "nameLocation": "7514:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3106,
                  "src": "7506:20:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2998,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7506:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7458:75:13"
            },
            "returnParameters": {
              "id": 3004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7565:0:13"
            },
            "scope": 3107,
            "src": "7438:1239:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3108,
        "src": "269:8411:13",
        "usedErrors": []
      }
    ],
    "src": "33:8649:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0xA7fa935af69671D9340648CddA03CE258F413285",
      "transactionHash": "0x3de0684c19124a7db0a383fa9bf69e94407fb4f5005ab234c6bf95ac0d2a0fb7"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-01-27T18:51:00.916Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addQuestion(string,uint256)": {
        "params": {
          "questionId": "ID of the question"
        }
      },
      "configureClaim(uint256,uint256,uint256)": {
        "params": {
          "_initialAmount": "Initial amount that can be claimed by an address",
          "_replenishAmount": "Amount of tokens that can be claimed when replenished",
          "_replenishDuration": "Duration in which token will replenish"
        }
      },
      "getQuestion(string)": {
        "params": {
          "questionId": "ID of the question"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "questionExist(string)": {
        "params": {
          "questionId": "ID of the question"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAccuCoin(address)": {
        "params": {
          "_accuCoin": "Address of accu coin"
        }
      },
      "setPlatform(address)": {
        "params": {
          "_platform": "Address of the platform wallet"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unlockQuestion(string,uint256)": {
        "params": {
          "commitAmount": "Amount user invests to unlock the question",
          "questionId": "ID of the question"
        }
      },
      "winQuestion(string,address)": {
        "params": {
          "_addressUser": "address of the user to sent reward",
          "questionId": "ID of the question"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addQuestion(string,uint256)": {
        "notice": "This method is used to get question details"
      },
      "claimTokens()": {
        "notice": "This method is used to claim tokens initially or when replenished"
      },
      "configureClaim(uint256,uint256,uint256)": {
        "notice": "This method is used to set token claim settings"
      },
      "getQuestion(string)": {
        "notice": "This method is used to get question details"
      },
      "pause()": {
        "notice": "This method is used pause user functionalities of the contract"
      },
      "questionExist(string)": {
        "notice": "This method is used to check if a question exist"
      },
      "setAccuCoin(address)": {
        "notice": "This method is used to address of accu coin"
      },
      "setPlatform(address)": {
        "notice": "This method is used to set platform wallet address"
      },
      "toggleIsInitialClaimable()": {
        "notice": "This method is used to toggle initial token claim"
      },
      "toggleIsReplenishable()": {
        "notice": "This method is used to toggle token replenish claim"
      },
      "unlockQuestion(string,uint256)": {
        "notice": "This method is used to unlock the question"
      },
      "unpause()": {
        "notice": "This method is used unpause user functionalities of the contract"
      },
      "winQuestion(string,address)": {
        "notice": "This method is used to transfer reward if answer is correct"
      }
    },
    "version": 1
  }
}